{
  "hash": "1fac0fa6ad535adf4dd7d6c72782cb70",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Check consistency of parquet files\njupyter: python3\n---\n\n::: {#8ef6f34f .cell execution_count=2}\n``` {.python .cell-code}\nimport glob\n\nimport os\nimport sys\nimport re \nimport shutils\n\nimport pandas as pd\nimport numpy as np\n\nimport datetime\n\nimport itertools\n\nimport zipfile\nfrom zipfile import ZipFile\nfrom tqdm import tqdm\n\nimport pyarrow as pa\nimport comet    as co\nimport pyarrow.parquet as pq\nimport pyarrow.dataset as ds\n\nos.environ['PYSPARK_PYTHON'] = sys.executable\nos.environ['PYSPARK_DRIVER_PYTHON'] = sys.executable\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[1], line 6</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">sys</span>\n<span class=\"ansi-green-fg ansi-bold\">      5</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">re</span> \n<span class=\"ansi-green-fg\">----&gt; 6</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">shutils</span>\n<span class=\"ansi-green-fg ansi-bold\">      8</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pandas</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">pd</span>\n<span class=\"ansi-green-fg ansi-bold\">      9</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span>\n\n<span class=\"ansi-red-fg\">ModuleNotFoundError</span>: No module named 'shutils'</pre>\n```\n:::\n\n:::\n:::\n\n\n## Paths\n\n::: {#8b0eff0c .cell execution_count=3}\n``` {.python .cell-code}\ndata_dir = \"../data\"\nos.path.exists(data_dir)\n\nextract_dir = os.path.join(data_dir, \"xcitibike\")\nif not os.path.exists(extract_dir):\n    os.mkdir(extract_dir)\n\nparquet_dir = os.path.join(data_dir, \"pq_citibike\")\nif not os.path.exists(parquet_dir):\n    os.mkdir(parquet_dir)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">FileNotFoundError</span>                         Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[2], line 6</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> extract_dir <span style=\"color:rgb(98,98,98)\">=</span> os<span style=\"color:rgb(98,98,98)\">.</span>path<span style=\"color:rgb(98,98,98)\">.</span>join(data_dir, <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">xcitibike</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> os<span style=\"color:rgb(98,98,98)\">.</span>path<span style=\"color:rgb(98,98,98)\">.</span>exists(extract_dir):\n<span class=\"ansi-green-fg\">----&gt; 6</span>     <span class=\"ansi-yellow-bg\">os</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">mkdir</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">extract_dir</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">      8</span> parquet_dir <span style=\"color:rgb(98,98,98)\">=</span> os<span style=\"color:rgb(98,98,98)\">.</span>path<span style=\"color:rgb(98,98,98)\">.</span>join(data_dir, <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">pq_citibike</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">      9</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> os<span style=\"color:rgb(98,98,98)\">.</span>path<span style=\"color:rgb(98,98,98)\">.</span>exists(parquet_dir):\n\n<span class=\"ansi-red-fg\">FileNotFoundError</span>: [Errno 2] No such file or directory: '../data/xcitibike'</pre>\n```\n:::\n\n:::\n:::\n\n\n## Spark session\n\n::: {#3df8dab6 .cell execution_count=4}\n``` {.python .cell-code}\nfrom pyspark import SparkConf, SparkContext\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql import functions as fn\nfrom pyspark.sql.types import *\n```\n:::\n\n\n::: {#6fe6feef .cell execution_count=5}\n``` {.python .cell-code}\nspark = (SparkSession\n    .builder\n    .appName(\"Spark checking citibike parquet file\")\n    .getOrCreate()\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n25/01/15 06:07:57 WARN Utils: Your hostname, boucheron-Precision-5480 resolves to a loopback address: 127.0.1.1; using 192.168.10.120 instead (on interface wlp0s20f3)\n25/01/15 06:07:57 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address\nSetting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n25/01/15 06:07:58 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n```\n:::\n:::\n\n\n## Try to load parquet file\n\n::: {#b6b7aadb .cell execution_count=6}\n``` {.python .cell-code}\nsch_1 = StructType([\n    StructField('trip_duration', StringType(), True), \n    StructField('started_at', TimestampType(), True), \n    StructField('ended_at', TimestampType(), True), \n    StructField('start_station_id', StringType(), True), \n    StructField('start_station_name', StringType(), True), \n    StructField('start_lat', StringType(), True), \n    StructField('start_lng', StringType(), True), \n    StructField('end_station_id', StringType(), True), \n    StructField('end_station_name', StringType(), True), \n    StructField('end_lat', StringType(), True), \n    StructField('end_lng', StringType(), True), \n    StructField('bike_id', StringType(), True), \n    StructField('user_type', StringType(), True), \n    StructField('birth_year', StringType(), True), \n    StructField('gender', StringType(), True), \n    StructField('start_year', IntegerType(), True), \n    StructField('start_month', IntegerType(), True)\n    ]\n)\n```\n:::\n\n\n::: {#f4e8fbcc .cell execution_count=7}\n``` {.python .cell-code}\ninput_file = os.path.join(parquet_dir, 'start_year=2022')\n\ndf = ( \n    spark.read\n        .option(\"mergeSchema\", \"true\")\n        .parquet(parquet_dir)\n)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[6], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> input_file <span style=\"color:rgb(98,98,98)\">=</span> os<span style=\"color:rgb(98,98,98)\">.</span>path<span style=\"color:rgb(98,98,98)\">.</span>join(<span class=\"ansi-yellow-bg\">parquet_dir</span>, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">start_year=2022</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> df <span style=\"color:rgb(98,98,98)\">=</span> ( \n<span class=\"ansi-green-fg ansi-bold\">      4</span>     spark<span style=\"color:rgb(98,98,98)\">.</span>read\n<span class=\"ansi-green-fg ansi-bold\">      5</span>         <span style=\"color:rgb(98,98,98)\">.</span>option(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">mergeSchema</span><span style=\"color:rgb(175,0,0)\">\"</span>, <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">true</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">      6</span>         <span style=\"color:rgb(98,98,98)\">.</span>parquet(parquet_dir)\n<span class=\"ansi-green-fg ansi-bold\">      7</span> )\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'parquet_dir' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6a440257 .cell execution_count=8}\n``` {.python .cell-code}\ndf.printSchema()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[7], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\">.</span>printSchema()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'df' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n```\nroot\n |-- trip_duration: string (nullable = true)\n |-- started_at: timestamp (nullable = true)\n |-- ended_at: timestamp (nullable = true)\n |-- start_station_id: string (nullable = true)\n |-- start_station_name: string (nullable = true)\n |-- start_lat: string (nullable = true)\n |-- start_lng: string (nullable = true)\n |-- end_station_id: string (nullable = true)\n |-- end_station_name: string (nullable = true)\n |-- end_lat: string (nullable = true)\n |-- end_lng: string (nullable = true)\n |-- bike_id: string (nullable = true)\n |-- user_type: string (nullable = true)\n |-- birth_year: string (nullable = true)\n |-- gender: string (nullable = true)\n |-- ride_id: string (nullable = true)\n |-- rideable_type: string (nullable = true)\n |-- member_casual: string (nullable = true)\n |-- start_year: integer (nullable = true)\n |-- start_month: integer (nullable = true)\n```\n\n::: {#639374cc .cell execution_count=9}\n``` {.python .cell-code}\ndf.select([\"started_at\", \"ended_at\"]).show(5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[8], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\">.</span>select([<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">started_at</span><span style=\"color:rgb(175,0,0)\">\"</span>, <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">ended_at</span><span style=\"color:rgb(175,0,0)\">\"</span>])<span style=\"color:rgb(98,98,98)\">.</span>show(<span style=\"color:rgb(98,98,98)\">5</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'df' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f690cf66 .cell execution_count=10}\n``` {.python .cell-code}\nprint(df.rdd.toDebugString().decode(\"utf-8\"))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[9], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span style=\"color:rgb(0,135,0)\">print</span>(<span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\">.</span>rdd<span style=\"color:rgb(98,98,98)\">.</span>toDebugString()<span style=\"color:rgb(98,98,98)\">.</span>decode(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">utf-8</span><span style=\"color:rgb(175,0,0)\">\"</span>))\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'df' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#69ecbed5 .cell execution_count=11}\n``` {.python .cell-code}\ndf.rdd.getNumPartitions()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[10], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\">.</span>rdd<span style=\"color:rgb(98,98,98)\">.</span>getNumPartitions()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'df' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c18a3616 .cell execution_count=12}\n``` {.python .cell-code}\ndf_pd = df.groupBy(['start_year', 'start_month']).count().toPandas()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[11], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> df_pd <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\">.</span>groupBy([<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">start_year</span><span style=\"color:rgb(175,0,0)\">'</span>, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">start_month</span><span style=\"color:rgb(175,0,0)\">'</span>])<span style=\"color:rgb(98,98,98)\">.</span>count()<span style=\"color:rgb(98,98,98)\">.</span>toPandas()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'df' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a25b69f0 .cell execution_count=13}\n``` {.python .cell-code}\ndf_pd.sort_values(by=['start_year', 'start_month'])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[12], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">df_pd</span><span style=\"color:rgb(98,98,98)\">.</span>sort_values(by<span style=\"color:rgb(98,98,98)\">=</span>[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">start_year</span><span style=\"color:rgb(175,0,0)\">'</span>, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">start_month</span><span style=\"color:rgb(175,0,0)\">'</span>])\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'df_pd' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#2dea7865 .cell execution_count=14}\n``` {.python .cell-code}\n(\n    df\n        .groupBy('rideable_type')\n        .agg(fn.count('started_at'))\n        .show()\n)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[13], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> (\n<span class=\"ansi-green-fg\">----&gt; 2</span>     <span class=\"ansi-yellow-bg\">df</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span>         <span style=\"color:rgb(98,98,98)\">.</span>groupBy(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">rideable_type</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      4</span>         <span style=\"color:rgb(98,98,98)\">.</span>agg(fn<span style=\"color:rgb(98,98,98)\">.</span>count(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">started_at</span><span style=\"color:rgb(175,0,0)\">'</span>))\n<span class=\"ansi-green-fg ansi-bold\">      5</span>         <span style=\"color:rgb(98,98,98)\">.</span>show()\n<span class=\"ansi-green-fg ansi-bold\">      6</span> )\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'df' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f7a22c83 .cell execution_count=15}\n``` {.python .cell-code}\nspark.stop()\n```\n:::\n\n\n::: {#016c5113 .cell execution_count=16}\n``` {.python .cell-code}\nfrom pyspark.sql.types import *\n```\n:::\n\n\n::: {#f3f7aed9 .cell execution_count=17}\n``` {.python .cell-code}\nprint(sch_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nStructType([StructField('trip_duration', StringType(), True), StructField('started_at', TimestampType(), True), StructField('ended_at', TimestampType(), True), StructField('start_station_id', StringType(), True), StructField('start_station_name', StringType(), True), StructField('start_lat', StringType(), True), StructField('start_lng', StringType(), True), StructField('end_station_id', StringType(), True), StructField('end_station_name', StringType(), True), StructField('end_lat', StringType(), True), StructField('end_lng', StringType(), True), StructField('bike_id', StringType(), True), StructField('user_type', StringType(), True), StructField('birth_year', StringType(), True), StructField('gender', StringType(), True), StructField('start_year', IntegerType(), True), StructField('start_month', IntegerType(), True)])\n```\n:::\n:::\n\n\n",
    "supporting": [
      "checking_parquet_citibike_files"
    ],
    "filters": [],
    "includes": {}
  }
}