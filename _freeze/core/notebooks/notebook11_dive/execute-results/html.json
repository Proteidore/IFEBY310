{
  "hash": "5b1292cdbd363e64816be1fda4cf11d5",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Diving deeer\njupyter: python3\n---\n\n::: {#14ea191a .cell execution_count=1}\n``` {.python .cell-code}\nimport os\nimport sys\n\nos.environ['PYSPARK_PYTHON'] = sys.executable\nos.environ['PYSPARK_DRIVER_PYTHON'] = sys.executable\n```\n:::\n\n\n::: {#39c75584 .cell execution_count=2}\n``` {.python .cell-code}\nfrom pyspark import SparkConf, SparkContext\nfrom pyspark.sql import SparkSession\n\nconf = SparkConf().setAppName(\"Spark SQL Course\")\nsc = SparkContext(conf=conf)  # no need for Spark 3...\n\nspark = (SparkSession\n    .builder\n    .appName(\"Spark SQL Course\")\n    .getOrCreate()\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n25/04/03 15:10:49 WARN Utils: Your hostname, boucheron-Precision-5480 resolves to a loopback address: 127.0.1.1; using 172.23.32.10 instead (on interface eth0)\n25/04/03 15:10:49 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address\nSetting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n25/04/03 15:10:50 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n```\n:::\n:::\n\n\n::: {#7125b5a4 .cell execution_count=3}\n``` {.python .cell-code}\nsc = spark._sc\n```\n:::\n\n\n::: {#bafa6dff .cell execution_count=4}\n``` {.python .cell-code}\nrdd = sc.parallelize([(\"a\", 1), (\"b\", 1), (\"a\", 1)])\n```\n:::\n\n\n::: {#abb9fee9 .cell execution_count=5}\n``` {.python .cell-code}\nrdd.reduceByKey(lambda a, b: a + b).collect()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\r[Stage 0:>                                                        (0 + 20) / 20]\r\r                                                                                \r\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n[('b', 1), ('a', 2)]\n```\n:::\n:::\n\n\n::: {#b078bbf3 .cell execution_count=6}\n``` {.python .cell-code}\nimport requests, zipfile, io\nfrom pathlib import Path\n\npath = Path('webdata.parquet')\nif not path.exists():\n    url = \"https://stephanegaiffas.github.io/big_data_course/data/webdata.parquet.zip\"\n    r = requests.get(url)\n    z = zipfile.ZipFile(io.BytesIO(r.content))\n    z.extractall(path='./')\n```\n:::\n\n\n::: {#d51bffaf .cell execution_count=7}\n``` {.python .cell-code}\ninput_path = './'\n\ninput_file = os.path.join(input_path, 'webdata.parquet')\ndf = spark.read.parquet(input_file)\n```\n:::\n\n\n::: {#394b4cf2 .cell execution_count=8}\n``` {.python .cell-code}\ndf.head(6)\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n[Row(xid='001ff9b6-5383-4221-812d-58c2c3f234cc', action='O', date=datetime.datetime(2017, 1, 25, 7, 2, 18), website_id='3', url='http://www.8chances.com/grille', category_id=1002.0, zipcode='11370', device='SMP'),\n Row(xid='0056ab7a-3cba-4ed5-a495-3d4abf79ab66', action='O', date=datetime.datetime(2016, 12, 28, 9, 47, 8), website_id='54', url='http://www.salaire-brut-en-net.fr/differences-brut-net/', category_id=1002.0, zipcode='86000', device='DSK'),\n Row(xid='005ae4ab-363a-41a0-b8f9-faee47d622a4', action='O', date=datetime.datetime(2017, 1, 27, 22, 21, 6), website_id='74', url='http://www.realite-virtuelle.com/top-applications-horreur-vr-halloween', category_id=1002.0, zipcode='49700', device='DSK'),\n Row(xid='006f867c-70cb-41f0-82af-f3688fa719c5', action='O', date=datetime.datetime(2016, 12, 20, 12, 45, 14), website_id='43', url='http://www.frenchblues.fr/', category_id=1002.0, zipcode='42660', device='DSK'),\n Row(xid='006f867c-70cb-41f0-82af-f3688fa719c5', action='O', date=datetime.datetime(2016, 12, 20, 12, 56, 50), website_id='43', url='http://www.frenchblues.fr/', category_id=1002.0, zipcode='42660', device='DSK'),\n Row(xid='006f867c-70cb-41f0-82af-f3688fa719c5', action='O', date=datetime.datetime(2016, 12, 20, 12, 56, 53), website_id='43', url='http://www.frenchblues.fr/contact/', category_id=1002.0, zipcode='42660', device='DSK')]\n```\n:::\n:::\n\n\n::: {#4f0e9d64 .cell execution_count=9}\n``` {.python .cell-code}\ndf.describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\nDataFrame[summary: string, xid: string, action: string, website_id: string, url: string, category_id: string, zipcode: string, device: string]\n```\n:::\n:::\n\n\n::: {#63f1712e .cell execution_count=10}\n``` {.python .cell-code}\ndf.count()\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n1179532\n```\n:::\n:::\n\n\n# Basic statistics\n\nFirst we need to import some things\n\n::: {#8c607fe5 .cell execution_count=11}\n``` {.python .cell-code}\nfrom pyspark.sql import Window\nimport pyspark.sql.functions as func\nfrom pyspark.sql.types import *\nfrom pyspark.sql.functions import col, lit\n```\n:::\n\n\n## Compute the total number of unique users\n\n::: {#dba8f617 .cell execution_count=12}\n``` {.python .cell-code}\ndf.select('xid').distinct().count()\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\n473761\n```\n:::\n:::\n\n\n## Construct a column containing the total number of actions per user\n\n::: {#48a69fc6 .cell execution_count=13}\n``` {.python .cell-code}\nxid_partition = Window.partitionBy('xid')\nn_events = func.count(col('action')).over(xid_partition)\ndf = df.withColumn('n_events', n_events)\ndf.head(n=2)\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\n[Row(xid='0006cea7-1679-4264-bdef-0cd089749ede', action='O', date=datetime.datetime(2016, 12, 26, 13, 41, 8), website_id='51', url='https://www.footlegende.fr/mercato-psg-coutinho-10166', category_id=1002.0, zipcode='34290', device='TAB', n_events=1),\n Row(xid='000893c8-a14b-4f33-858f-210440f37def', action='O', date=datetime.datetime(2016, 12, 23, 16, 18, 37), website_id='56', url='http://blague.dumatin.fr/', category_id=1002.0, zipcode=None, device='DSK', n_events=1)]\n```\n:::\n:::\n\n\n::: {#2e4f54cc .cell execution_count=14}\n``` {.python .cell-code}\ndf.groupBy('xid').agg(func.count('action')).head(5)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\n[Row(xid='001c4a21-52c6-4890-b6ce-2b9d4ba06a56', count(action)=1),\n Row(xid='0024344b-7ee2-4fcd-a0b4-bec26d8c8b0e', count(action)=4),\n Row(xid='004564e3-87c1-4e16-ad2c-0e96afc3d617', count(action)=1),\n Row(xid='006d807f-91c3-415a-bb5e-6b9f7e6517a1', count(action)=1),\n Row(xid='006e0463-b24c-4996-84ab-d6d0d65a52aa', count(action)=1)]\n```\n:::\n:::\n\n\n## Construct a column containing the number of days since the last action of the user\n\n::: {#47c6d90b .cell execution_count=15}\n``` {.python .cell-code}\nxid_partition = Window.partitionBy('xid')\nmax_date = func.max(col('date')).over(xid_partition)\nn_days_since_last_event = func.datediff(func.current_date(), max_date)\ndf = df.withColumn('n_days_since_last_event',\n                   n_days_since_last_event)\ndf.head(n=2)\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n[Row(xid='0006cea7-1679-4264-bdef-0cd089749ede', action='O', date=datetime.datetime(2016, 12, 26, 13, 41, 8), website_id='51', url='https://www.footlegende.fr/mercato-psg-coutinho-10166', category_id=1002.0, zipcode='34290', device='TAB', n_events=1, n_days_since_last_event=3020),\n Row(xid='000893c8-a14b-4f33-858f-210440f37def', action='O', date=datetime.datetime(2016, 12, 23, 16, 18, 37), website_id='56', url='http://blague.dumatin.fr/', category_id=1002.0, zipcode=None, device='DSK', n_events=1, n_days_since_last_event=3023)]\n```\n:::\n:::\n\n\n## Construct a column containing the number of actions of each user for each modality of device\n\n::: {#66ebe47c .cell execution_count=16}\n``` {.python .cell-code}\nxid_device_partition = Window.partitionBy('xid', 'device')\nn_events_per_device = func.count(col('action')).over(xid_device_partition)\ndf = df.withColumn('n_events_per_device', n_events_per_device)\ndf.head(n=2)\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\n[Row(xid='0006cea7-1679-4264-bdef-0cd089749ede', action='O', date=datetime.datetime(2016, 12, 26, 13, 41, 8), website_id='51', url='https://www.footlegende.fr/mercato-psg-coutinho-10166', category_id=1002.0, zipcode='34290', device='TAB', n_events=1, n_days_since_last_event=3020, n_events_per_device=1),\n Row(xid='000893c8-a14b-4f33-858f-210440f37def', action='O', date=datetime.datetime(2016, 12, 23, 16, 18, 37), website_id='56', url='http://blague.dumatin.fr/', category_id=1002.0, zipcode=None, device='DSK', n_events=1, n_days_since_last_event=3023, n_events_per_device=1)]\n```\n:::\n:::\n\n\n## Number of device per user: some mental gymnastics\n\n::: {#f2ddf0f7 .cell execution_count=17}\n``` {.python .cell-code}\nxid_partition = Window.partitionBy('xid')\nrank_device = func.dense_rank().over(xid_partition.orderBy('device'))\nn_unique_device = func.last(rank_device).over(xid_partition)\ndf = df.withColumn('n_device', n_unique_device)\ndf.head(n=2)\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```\n[Row(xid='0006cea7-1679-4264-bdef-0cd089749ede', action='O', date=datetime.datetime(2016, 12, 26, 13, 41, 8), website_id='51', url='https://www.footlegende.fr/mercato-psg-coutinho-10166', category_id=1002.0, zipcode='34290', device='TAB', n_events=1, n_days_since_last_event=3020, n_events_per_device=1, n_device=1),\n Row(xid='000893c8-a14b-4f33-858f-210440f37def', action='O', date=datetime.datetime(2016, 12, 23, 16, 18, 37), website_id='56', url='http://blague.dumatin.fr/', category_id=1002.0, zipcode=None, device='DSK', n_events=1, n_days_since_last_event=3023, n_events_per_device=1, n_device=1)]\n```\n:::\n:::\n\n\n::: {#be66d936 .cell execution_count=18}\n``` {.python .cell-code}\ndf\\\n    .where(col('n_device') > 1)\\\n    .select('xid', 'device', 'n_events',  'n_device', 'n_events_per_device')\\\n    .head(n=8)\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```\n[Row(xid='4c1dc79d-a140-4da9-ae28-540b4503c3b8', device='DSK', n_events=6, n_device=2, n_events_per_device=5),\n Row(xid='4c1dc79d-a140-4da9-ae28-540b4503c3b8', device='DSK', n_events=6, n_device=2, n_events_per_device=5),\n Row(xid='4c1dc79d-a140-4da9-ae28-540b4503c3b8', device='DSK', n_events=6, n_device=2, n_events_per_device=5),\n Row(xid='4c1dc79d-a140-4da9-ae28-540b4503c3b8', device='DSK', n_events=6, n_device=2, n_events_per_device=5),\n Row(xid='4c1dc79d-a140-4da9-ae28-540b4503c3b8', device='DSK', n_events=6, n_device=2, n_events_per_device=5),\n Row(xid='4c1dc79d-a140-4da9-ae28-540b4503c3b8', device='MOB', n_events=6, n_device=2, n_events_per_device=1),\n Row(xid='78156cdf-7229-46eb-bb6b-92d384f9a6fa', device='DSK', n_events=6, n_device=2, n_events_per_device=5),\n Row(xid='78156cdf-7229-46eb-bb6b-92d384f9a6fa', device='DSK', n_events=6, n_device=2, n_events_per_device=5)]\n```\n:::\n:::\n\n\n# Let's select the correct users and build a training dataset\n\nWe construct a ETL (Extract Transform Load) process on this data using the `pyspark.sql` API.\n\n## Extraction\n\nExtraction is easy here, it's just about reading the data\n\n::: {#b25ee13f .cell execution_count=19}\n``` {.python .cell-code}\ndf = spark.read.parquet(input_file)\ndf.head(n=3)\n```\n\n::: {.cell-output .cell-output-display execution_count=19}\n```\n[Row(xid='001ff9b6-5383-4221-812d-58c2c3f234cc', action='O', date=datetime.datetime(2017, 1, 25, 7, 2, 18), website_id='3', url='http://www.8chances.com/grille', category_id=1002.0, zipcode='11370', device='SMP'),\n Row(xid='0056ab7a-3cba-4ed5-a495-3d4abf79ab66', action='O', date=datetime.datetime(2016, 12, 28, 9, 47, 8), website_id='54', url='http://www.salaire-brut-en-net.fr/differences-brut-net/', category_id=1002.0, zipcode='86000', device='DSK'),\n Row(xid='005ae4ab-363a-41a0-b8f9-faee47d622a4', action='O', date=datetime.datetime(2017, 1, 27, 22, 21, 6), website_id='74', url='http://www.realite-virtuelle.com/top-applications-horreur-vr-halloween', category_id=1002.0, zipcode='49700', device='DSK')]\n```\n:::\n:::\n\n\n## Transformation of the data\n\nAt this step we compute a lot of extra things from the data. The aim is to build features that describe users.\n\n::: {#8e5cbb1e .cell execution_count=20}\n``` {.python .cell-code}\ndef n_events_transformer(df):\n    xid_partition = Window.partitionBy('xid')\n    n_events = func.count(col('action')).over(xid_partition)\n    df = df.withColumn('n_events', n_events)\n    return df\n\ndef n_events_per_action_transformer(df):\n    xid_action_partition = Window.partitionBy('xid', 'action')\n    n_events_per_action = func.count(col('action')).over(xid_action_partition)\n    df = df.withColumn('n_events_per_action', n_events_per_action)\n    return df\n\ndef hour_transformer(df):\n    hour = func.hour(col('date'))\n    df = df.withColumn('hour', hour)\n    return df\n\ndef weekday_transformer(df):\n    weekday = func.date_format(col('date'), 'EEEE')\n    df = df.withColumn('weekday', weekday)\n    return df\n\ndef n_events_per_hour_transformer(df):\n    xid_hour_partition = Window.partitionBy('xid', 'hour')\n    n_events_per_hour = func.count(col('action')).over(xid_hour_partition)\n    df = df.withColumn('n_events_per_hour', n_events_per_hour)\n    return df\n\ndef n_events_per_weekday_transformer(df):\n    xid_weekday_partition = Window.partitionBy('xid', 'weekday')\n    n_events_per_weekday = func.count(col('action')).over(xid_weekday_partition)\n    df = df.withColumn('n_events_per_weekday', n_events_per_weekday)\n    return df\n\ndef n_days_since_last_event_transformer(df):\n    xid_partition = Window.partitionBy('xid')\n    max_date = func.max(col('date')).over(xid_partition)\n    n_days_since_last_event = func.datediff(func.current_date(), max_date)\n    df = df.withColumn('n_days_since_last_event',\n                       n_days_since_last_event + lit(0.1))\n    return df\n\ndef n_days_since_last_action_transformer(df):\n    xid_partition_action = Window.partitionBy('xid', 'action')\n    max_date = func.max(col('date')).over(xid_partition_action)\n    n_days_since_last_action = func.datediff(func.current_date(),\n                                                        max_date)\n    df = df.withColumn('n_days_since_last_action',\n                       n_days_since_last_action + lit(0.1))\n    return df\n\ndef n_unique_day_transformer(df):\n    xid_partition = Window.partitionBy('xid')\n    dayofyear = func.dayofyear(col('date'))\n    rank_day = func.dense_rank().over(xid_partition.orderBy(dayofyear))\n    n_unique_day = func.last(rank_day).over(xid_partition)\n    df = df.withColumn('n_unique_day', n_unique_day)\n    return df\n\ndef n_unique_hour_transformer(df):\n    xid_partition = Window.partitionBy('xid')\n    rank_hour = func.dense_rank().over(xid_partition.orderBy('hour'))\n    n_unique_hour = func.last(rank_hour).over(xid_partition)\n    df = df.withColumn('n_unique_hour', n_unique_hour)\n    return df\n\ndef n_events_per_device_transformer(df):\n    xid_device_partition = Window.partitionBy('xid', 'device')\n    n_events_per_device = func.count(func.col('device')) \\\n        .over(xid_device_partition)\n    df = df.withColumn('n_events_per_device', n_events_per_device)\n    return df\n\ndef n_unique_device_transformer(df):\n    xid_partition = Window.partitionBy('xid')\n    rank_device = func.dense_rank().over(xid_partition.orderBy('device'))\n    n_unique_device = func.last(rank_device).over(xid_partition)\n    df = df.withColumn('n_device', n_unique_device)\n    return df\n\ndef n_actions_per_category_id_transformer(df):\n    xid_category_id_partition = Window.partitionBy('xid', 'category_id',\n                                                   'action')\n    n_actions_per_category_id = func.count(func.col('action')) \\\n        .over(xid_category_id_partition)\n    df = df.withColumn('n_actions_per_category_id', n_actions_per_category_id)\n    return df\n\ndef n_unique_category_id_transformer(df):\n    xid_partition = Window.partitionBy('xid')\n    rank_category_id = func.dense_rank().over(xid_partition\\\n                                              .orderBy('category_id'))\n    n_unique_category_id = func.last(rank_category_id).over(xid_partition)\n    df = df.withColumn('n_unique_category_id', n_unique_category_id)\n    return df\n\ndef n_events_per_category_id_transformer(df):\n    xid_category_id_partition = Window.partitionBy('xid', 'category_id')\n    n_events_per_category_id = func.count(func.col('action')) \\\n        .over(xid_category_id_partition)\n    df = df.withColumn('n_events_per_category_id', n_events_per_category_id)\n    return df\n\ndef n_events_per_website_id_transformer(df):\n    xid_website_id_partition = Window.partitionBy('xid', 'website_id')\n    n_events_per_website_id = func.count(col('action'))\\\n        .over(xid_website_id_partition)\n    df = df.withColumn('n_events_per_website_id', n_events_per_website_id)\n    return df\n```\n:::\n\n\n::: {#d153cc93 .cell execution_count=21}\n``` {.python .cell-code}\ntransformers = [\n    hour_transformer,\n    weekday_transformer,\n    n_events_per_hour_transformer,\n    n_events_per_weekday_transformer,\n    n_days_since_last_event_transformer,\n    n_days_since_last_action_transformer,\n    n_unique_day_transformer,\n    n_unique_hour_transformer,\n    n_events_per_device_transformer,\n    n_unique_device_transformer,\n    n_actions_per_category_id_transformer,\n    n_events_per_category_id_transformer,\n    n_events_per_website_id_transformer,\n]\n\nfor transformer in transformers:\n    df = transformer(df)\n\ndf.head(n=1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\r[Stage 35:>                                                         (0 + 1) / 1]\r\r                                                                                \r\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=21}\n```\n[Row(xid='0006cea7-1679-4264-bdef-0cd089749ede', action='O', date=datetime.datetime(2016, 12, 26, 13, 41, 8), website_id='51', url='https://www.footlegende.fr/mercato-psg-coutinho-10166', category_id=1002.0, zipcode='34290', device='TAB', hour=13, weekday='Monday', n_events_per_hour=1, n_events_per_weekday=1, n_days_since_last_event=3020.1, n_days_since_last_action=3020.1, n_unique_day=1, n_unique_hour=1, n_events_per_device=1, n_device=1, n_actions_per_category_id=1, n_events_per_category_id=1, n_events_per_website_id=1)]\n```\n:::\n:::\n\n\n::: {#51ce4948 .cell execution_count=22}\n``` {.python .cell-code}\nsorted(df.columns)\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```\n['action',\n 'category_id',\n 'date',\n 'device',\n 'hour',\n 'n_actions_per_category_id',\n 'n_days_since_last_action',\n 'n_days_since_last_event',\n 'n_device',\n 'n_events_per_category_id',\n 'n_events_per_device',\n 'n_events_per_hour',\n 'n_events_per_website_id',\n 'n_events_per_weekday',\n 'n_unique_day',\n 'n_unique_hour',\n 'url',\n 'website_id',\n 'weekday',\n 'xid',\n 'zipcode']\n```\n:::\n:::\n\n\n## Load step\n\nHere, we use all the previous computations (saved in the columns of the dataframe) \nto compute aggregated informations about each user.\n\n::: {#89351591 .cell execution_count=23}\n``` {.python .cell-code}\ndef n_events_per_hour_loader(df):\n    csr = df\\\n        .select('xid', 'hour', 'n_events_per_hour')\\\n        .withColumnRenamed('n_events_per_hour', 'value')\\\n        .distinct()\n    feature_name = func.concat(lit('n_events_per_hour#'), col('hour'))\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\\\n        .drop('hour')\n    return csr\n\ndef n_events_per_website_id_loader(df):\n    csr = df.select('xid', 'website_id', 'n_events_per_website_id')\\\n        .withColumnRenamed('n_events_per_hour', 'value')\\\n        .distinct()\n    feature_name = func.concat(lit('n_events_per_website_id#'),\n                               col('website_id'))\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\\\n        .drop('website_id')\n    return csr\n\ndef n_events_per_hour_loader(df):\n    csr = df\\\n        .select('xid', 'hour', 'n_events_per_hour')\\\n        .withColumnRenamed('n_events_per_hour', 'value')\\\n        .distinct()\n    feature_name = func.concat(lit('n_events_per_hour#'), col('hour'))\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\\\n        .drop('hour')\n    return csr\n\ndef n_events_per_weekday_loader(df):\n    csr = df\\\n        .select('xid', 'weekday', 'n_events_per_weekday')\\\n        .withColumnRenamed('n_events_per_weekday', 'value')\\\n        .distinct()\n    feature_name = func.concat(lit('n_events_per_weekday#'), col('weekday'))\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\\\n        .drop('weekday')\n    return csr\n\ndef n_days_since_last_event_loader(df):\n    csr = df.select('xid',  'n_days_since_last_event')\\\n        .withColumnRenamed('n_days_since_last_event#', 'value')\\\n        .distinct()\n    feature_name = lit('n_days_since_last_event')\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\n    return csr\n\ndef n_days_since_last_action_loader(df):\n    csr = df.select('xid', 'action', 'n_days_since_last_action')\\\n        .withColumnRenamed('n_days_since_last_action', 'value')\\\n        .distinct()\n    feature_name = func.concat(lit('n_days_since_last_action#'), col('action'))\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\\\n        .drop('action')\n    return csr\n\ndef n_unique_day_loader(df):\n    csr = df.select('xid', 'n_unique_day')\\\n        .withColumnRenamed('n_unique_day', 'value')\\\n        .distinct()\n    feature_name = lit('n_unique_day')\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\n    return csr\n\ndef n_unique_hour_loader(df):\n    csr = df.select('xid', 'n_unique_hour')\\\n        .withColumnRenamed('n_unique_hour', 'value')\\\n        .distinct()\n    feature_name = lit('n_unique_hour')\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\n    return csr\n\ndef n_events_per_device_loader(df):\n    csr = df\\\n        .select('xid', 'device', 'n_events_per_device')\\\n        .withColumnRenamed('n_events_per_device', 'value')\\\n        .distinct()\n    feature_name = func.concat(lit('n_events_per_device#'), col('device'))\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\\\n        .drop('device')\n    return csr\n\ndef n_unique_device_loader(df):\n    csr = df.select('xid', 'n_device')\\\n        .withColumnRenamed('n_device', 'value')\\\n        .distinct()\n    feature_name = lit('n_device')\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\n    return csr\n\ndef n_events_per_category_id_loader(df):\n    csr = df.select('xid', 'category_id', 'n_events_per_category_id')\\\n        .withColumnRenamed('n_events_per_category_id', 'value')\\\n        .distinct()\n    feature_name = func.concat(lit('n_events_per_category_id#'),\n                               col('category_id'))\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\\\n        .drop('category_id')\n    return csr\n\ndef n_actions_per_category_id_loader(df):\n    csr = df.select('xid', 'category_id', 'action', 'n_actions_per_category_id')\\\n        .withColumnRenamed('n_actions_per_category_id', 'value')\\\n        .distinct()\n    feature_name = func.concat(lit('n_actions_per_category_id#'),\n                               col('action'), lit('#'), \n                               col('category_id'))\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\\\n        .drop('category_id')\\\n        .drop('action')\n    return csr\n\ndef n_events_per_website_id_loader(df):\n    csr = df.select('xid', 'website_id', 'n_events_per_website_id')\\\n        .withColumnRenamed('n_events_per_website_id', 'value')\\\n        .distinct()\n    feature_name = func.concat(lit('n_events_per_website_id#'),\n                               col('website_id'))\n    csr = csr\\\n        .withColumn('feature_name', feature_name)\\\n        .drop('website_id')\n    return csr\n```\n:::\n\n\n::: {#064cf8f6 .cell execution_count=24}\n``` {.python .cell-code}\nfrom functools import reduce\n\nloaders = [\n    n_events_per_hour_loader,\n    n_events_per_website_id_loader,\n    n_events_per_hour_loader,\n    n_events_per_weekday_loader,\n    n_days_since_last_event_loader,\n    n_days_since_last_action_loader,\n    n_unique_day_loader,\n    n_unique_hour_loader,\n    n_events_per_device_loader,\n    n_unique_device_loader,\n    n_events_per_category_id_loader,\n    n_actions_per_category_id_loader,\n    n_events_per_website_id_loader,\n]\n\ndef union(df, other):\n    return df.union(other)\n\ncsr = reduce(\n    lambda df1, df2: df1.union(df2),\n    [loader(df) for loader in loaders]\n)\n\ncsr.head(n=3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\r[Stage 38:=>(10 + 2) / 12][Stage 39:==>(9 + 3) / 12][Stage 40:=> (6 + 6) / 12]\r\r[Stage 40:=> (6 + 6) / 12][Stage 41:=> (6 + 6) / 12][Stage 42:=> (6 + 6) / 12]\r\r[Stage 43:==>(8 + 4) / 12][Stage 44:=> (6 + 6) / 12][Stage 45:>  (3 + 9) / 12]\r\r[Stage 44:=>(10 + 2) / 12][Stage 45:=> (6 + 6) / 12][Stage 46:=> (6 + 6) / 12]\r\r[Stage 48:>               (0 + 19) / 19][Stage 50:>                (1 + 1) / 20]\r\r[Stage 50:==============>                                         (5 + 15) / 20]\r\r[Stage 64:>                                                         (0 + 1) / 1]\r\r                                                                                \r\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\n[Row(xid='000095cc-9a61-49b5-8ad5-83442daa93d6', value=2.0, feature_name='n_events_per_hour#21'),\n Row(xid='0000fa20-47ca-4548-82e9-78d81aa83fba', value=1.0, feature_name='n_events_per_hour#23'),\n Row(xid='00010386-a996-48ad-9888-4df5440188f2', value=1.0, feature_name='n_events_per_hour#21')]\n```\n:::\n:::\n\n\n::: {#4c713b1e .cell execution_count=25}\n``` {.python .cell-code}\ncsr.columns\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```\n['xid', 'value', 'feature_name']\n```\n:::\n:::\n\n\n::: {#18735aa7 .cell execution_count=26}\n``` {.python .cell-code}\ncsr.count()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\r[Stage 65:=>(10 + 2) / 12][Stage 67:=> (7 + 5) / 12][Stage 68:==>(9 + 3) / 12]\r\r[Stage 69:=========>       (7 + 5) / 12][Stage 70:===========>     (8 + 4) / 12]\r\r[Stage 72:=> (7 + 5) / 12][Stage 73:=> (6 + 6) / 12][Stage 74:=> (6 + 6) / 12]\r\r[Stage 75:==========================================>              (9 + 3) / 12]\r25/04/03 15:11:06 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:06 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n\r[Stage 93:>                                                       (0 + 20) / 20]\r25/04/03 15:11:06 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:06 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:07 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:07 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN TaskMemoryManager: Failed to allocate a page (4194304 bytes), try again.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN TaskMemoryManager: Failed to allocate a page (4194304 bytes), try again.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[19,167s][warning][gc,alloc] Executor task launch worker for task 7.0 in stage 93.0 (TID 527): Retried waiting for GCLocker too often allocating 524290 words\n[19,195s][warning][gc,alloc] Executor task launch worker for task 9.0 in stage 93.0 (TID 529): Retried waiting for GCLocker too often allocating 524290 words\n[19,195s][warning][gc,alloc] Executor task launch worker for task 7.0 in stage 93.0 (TID 527): Retried waiting for GCLocker too often allocating 524290 words\n[19,214s][warning][gc,alloc] Executor task launch worker for task 7.0 in stage 93.0 (TID 527): Retried waiting for GCLocker too often allocating 486289 words\n[19,215s][warning][gc,alloc] Executor task launch worker for task 9.0 in stage 93.0 (TID 529): Retried waiting for GCLocker too often allocating 131074 words\n[19,215s][warning][gc,alloc] Executor task launch worker for task 1.0 in stage 93.0 (TID 521): Retried waiting for GCLocker too often allocating 131074 words\n[19,218s][warning][gc,alloc] Executor task launch worker for task 3.0 in stage 93.0 (TID 523): Retried waiting for GCLocker too often allocating 524290 words\n[19,225s][warning][gc,alloc] Executor task launch worker for task 3.0 in stage 93.0 (TID 523): Retried waiting for GCLocker too often allocating 131074 words\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n25/04/03 15:11:08 WARN TaskMemoryManager: Failed to allocate a page (4194304 bytes), try again.\n25/04/03 15:11:08 WARN TaskMemoryManager: Failed to allocate a page (4194304 bytes), try again.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN TaskMemoryManager: Failed to allocate a page (3890290 bytes), try again.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN RowBasedKeyValueBatch: Calling spill() on RowBasedKeyValueBatch. Will not spill but return 0.\n25/04/03 15:11:08 WARN TaskMemoryManager: Failed to allocate a page (4194304 bytes), try again.\n25/04/03 15:11:08 ERROR Executor: Exception in task 9.0 in stage 93.0 (TID 529)\njava.lang.OutOfMemoryError: Java heap space\n25/04/03 15:11:08 ERROR Executor: Exception in task 3.0 in stage 93.0 (TID 523)\njava.lang.OutOfMemoryError: Java heap space\n25/04/03 15:11:08 ERROR Executor: Exception in task 1.0 in stage 93.0 (TID 521)\njava.lang.OutOfMemoryError: Java heap space\n25/04/03 15:11:08 ERROR SparkUncaughtExceptionHandler: Uncaught exception in thread Thread[Executor task launch worker for task 1.0 in stage 93.0 (TID 521),5,main]\njava.lang.OutOfMemoryError: Java heap space\n25/04/03 15:11:08 ERROR SparkUncaughtExceptionHandler: [Container in shutdown] Uncaught exception in thread Thread[Executor task launch worker for task 9.0 in stage 93.0 (TID 529),5,main]\njava.lang.OutOfMemoryError: Java heap space\n25/04/03 15:11:08 ERROR SparkUncaughtExceptionHandler: [Container in shutdown] Uncaught exception in thread Thread[Executor task launch worker for task 3.0 in stage 93.0 (TID 523),5,main]\njava.lang.OutOfMemoryError: Java heap space\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\n25/04/03 15:11:08 ERROR TaskSetManager: Task 1 in stage 93.0 failed 1 times; aborting job\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 18.0 in stage 93.0 (TID 538) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 14.0 in stage 93.0 (TID 534) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 4.0 in stage 93.0 (TID 524) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 15.0 in stage 93.0 (TID 535) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 12.0 in stage 93.0 (TID 532) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 5.0 in stage 93.0 (TID 525) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 7.0 in stage 93.0 (TID 527) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 0.0 in stage 93.0 (TID 520) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 2.0 in stage 93.0 (TID 522) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 17.0 in stage 93.0 (TID 537) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 13.0 in stage 93.0 (TID 533) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 8.0 in stage 93.0 (TID 528) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 19.0 in stage 93.0 (TID 539) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 11.0 in stage 93.0 (TID 531) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 6.0 in stage 93.0 (TID 526) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 16.0 in stage 93.0 (TID 536) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\n25/04/03 15:11:08 WARN TaskSetManager: Lost task 10.0 in stage 93.0 (TID 530) (host-32-10.sg.lan executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 93.0 failed 1 times, most recent failure: Lost task 1.0 in stage 93.0 (TID 521) (host-32-10.sg.lan executor driver): java.lang.OutOfMemoryError: Java heap space\n\nDriver stacktrace:)\nERROR:root:Exception while sending command.\nTraceback (most recent call last):\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/IPython/core/interactiveshell.py\", line 3577, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"/tmp/ipykernel_87987/3594614522.py\", line 1, in <module>\n    csr.count()\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py\", line 1240, in count\n    return int(self._jdf.count())\n               ^^^^^^^^^^^^^^^^^\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py\", line 1322, in __call__\n    return_value = get_return_value(\n                   ^^^^^^^^^^^^^^^^^\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py\", line 179, in deco\n    return f(*a, **kw)\n           ^^^^^^^^^^^\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/protocol.py\", line 326, in get_return_value\n    raise Py4JJavaError(\npy4j.protocol.Py4JJavaError: <exception str() failed>\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py\", line 516, in send_command\n    raise Py4JNetworkError(\"Answer from Java side is empty\")\npy4j.protocol.Py4JNetworkError: Answer from Java side is empty\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py\", line 1038, in send_command\n    response = connection.send_command(command)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py\", line 539, in send_command\n    raise Py4JNetworkError(\npy4j.protocol.Py4JNetworkError: Error while sending or receiving\nERROR:root:Exception while sending command.\nTraceback (most recent call last):\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py\", line 511, in send_command\n    answer = smart_decode(self.stream.readline()[:-1])\n                          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/socket.py\", line 707, in readinto\n    return self._sock.recv_into(b)\n           ^^^^^^^^^^^^^^^^^^^^^^^\nConnectionResetError: [Errno 104] Connection reset by peer\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py\", line 1038, in send_command\n    response = connection.send_command(command)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/boucheron/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py\", line 539, in send_command\n    raise Py4JNetworkError(\npy4j.protocol.Py4JNetworkError: Error while sending or receiving\n```\n:::\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">Py4JJavaError</span>                             Traceback (most recent call last)\n    <span class=\"ansi-red-fg\">[... skipping hidden 1 frame]</span>\n\nCell <span class=\"ansi-green-fg\">In[26], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">csr</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">count</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:1240</span>, in <span class=\"ansi-cyan-fg\">DataFrame.count</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1218</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Returns the number of rows in this :class:`DataFrame`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1219</span> \n<span class=\"ansi-green-fg ansi-bold\">   1220</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">.. versionadded:: 1.3.0</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1238</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">3</span>\n<span class=\"ansi-green-fg ansi-bold\">   1239</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1240</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">int</span>(<span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jdf</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">count</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1322</span>, in <span class=\"ansi-cyan-fg\">JavaMember.__call__</span><span class=\"ansi-blue-fg\">(self, *args)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1321</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_client<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n<span class=\"ansi-green-fg\">-&gt; 1322</span> return_value <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">get_return_value</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1323</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">answer</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">gateway_client</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">target_id</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1325</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> temp_arg <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> temp_args:\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/errors/exceptions/captured.py:179</span>, in <span class=\"ansi-cyan-fg\">capture_sql_exception.&lt;locals&gt;.deco</span><span class=\"ansi-blue-fg\">(*a, **kw)</span>\n<span class=\"ansi-green-fg ansi-bold\">    178</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg\">--&gt; 179</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">a</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kw</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    180</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">except</span> Py4JJavaError <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> e:\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/protocol.py:326</span>, in <span class=\"ansi-cyan-fg\">get_return_value</span><span class=\"ansi-blue-fg\">(answer, gateway_client, target_id, name)</span>\n<span class=\"ansi-green-fg ansi-bold\">    325</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> answer[<span style=\"color:rgb(98,98,98)\">1</span>] <span style=\"color:rgb(98,98,98)\">==</span> REFERENCE_TYPE:\n<span class=\"ansi-green-fg\">--&gt; 326</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span> Py4JJavaError(\n<span class=\"ansi-green-fg ansi-bold\">    327</span>         <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">An error occurred while calling </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{0}</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{1}</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{2}</span><span style=\"color:rgb(175,0,0)\">.</span><span style=\"font-weight:bold;color:rgb(175,95,0)\">\\n</span><span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(98,98,98)\">.</span>\n<span class=\"ansi-green-fg ansi-bold\">    328</span>         <span style=\"color:rgb(0,135,0)\">format</span>(target_id, <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">.</span><span style=\"color:rgb(175,0,0)\">\"</span>, name), value)\n<span class=\"ansi-green-fg ansi-bold\">    329</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n\n<span class=\"ansi-red-fg\">&lt;class 'str'&gt;</span>: (&lt;class 'ConnectionRefusedError'&gt;, ConnectionRefusedError(111, 'Connection refused'))\n\nDuring handling of the above exception, another exception occurred:\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\n    <span class=\"ansi-red-fg\">[... skipping hidden 1 frame]</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2179</span>, in <span class=\"ansi-cyan-fg\">InteractiveShell.showtraceback</span><span class=\"ansi-blue-fg\">(self, exc_tuple, filename, tb_offset, exception_only, running_compiled_code)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2176</span>         traceback<span style=\"color:rgb(98,98,98)\">.</span>print_exc()\n<span class=\"ansi-green-fg ansi-bold\">   2177</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg\">-&gt; 2179</span>     <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_showtraceback</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">etype</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">value</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">stb</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2180</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>call_pdb:\n<span class=\"ansi-green-fg ansi-bold\">   2181</span>     <span style=\"font-style:italic;color:rgb(95,135,135)\"># drop into debugger</span>\n<span class=\"ansi-green-fg ansi-bold\">   2182</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>debugger(force<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/ipykernel/zmqshell.py:559</span>, in <span class=\"ansi-cyan-fg\">ZMQInteractiveShell._showtraceback</span><span class=\"ansi-blue-fg\">(self, etype, evalue, stb)</span>\n<span class=\"ansi-green-fg ansi-bold\">    553</span> sys<span style=\"color:rgb(98,98,98)\">.</span>stdout<span style=\"color:rgb(98,98,98)\">.</span>flush()\n<span class=\"ansi-green-fg ansi-bold\">    554</span> sys<span style=\"color:rgb(98,98,98)\">.</span>stderr<span style=\"color:rgb(98,98,98)\">.</span>flush()\n<span class=\"ansi-green-fg ansi-bold\">    556</span> exc_content <span style=\"color:rgb(98,98,98)\">=</span> {\n<span class=\"ansi-green-fg ansi-bold\">    557</span>     <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">traceback</span><span style=\"color:rgb(175,0,0)\">\"</span>: stb,\n<span class=\"ansi-green-fg ansi-bold\">    558</span>     <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">ename</span><span style=\"color:rgb(175,0,0)\">\"</span>: <span style=\"color:rgb(0,135,0)\">str</span>(etype<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span>),\n<span class=\"ansi-green-fg\">--&gt; 559</span>     <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">evalue</span><span style=\"color:rgb(175,0,0)\">\"</span>: <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">str</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">evalue</span><span class=\"ansi-yellow-bg\">)</span>,\n<span class=\"ansi-green-fg ansi-bold\">    560</span> }\n<span class=\"ansi-green-fg ansi-bold\">    562</span> dh <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>displayhook\n<span class=\"ansi-green-fg ansi-bold\">    563</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Send exception info over pub socket for other clients than the caller</span>\n<span class=\"ansi-green-fg ansi-bold\">    564</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># to pick up</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/protocol.py:471</span>, in <span class=\"ansi-cyan-fg\">Py4JJavaError.__str__</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    469</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__str__</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    470</span>     gateway_client <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_exception<span style=\"color:rgb(98,98,98)\">.</span>_gateway_client\n<span class=\"ansi-green-fg\">--&gt; 471</span>     answer <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">exception_cmd</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    472</span>     return_value <span style=\"color:rgb(98,98,98)\">=</span> get_return_value(answer, gateway_client, <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>, <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>)\n<span class=\"ansi-green-fg ansi-bold\">    473</span>     <span style=\"font-style:italic;color:rgb(95,135,135)\"># Note: technically this should return a bytestring 'str' rather than</span>\n<span class=\"ansi-green-fg ansi-bold\">    474</span>     <span style=\"font-style:italic;color:rgb(95,135,135)\"># unicodes in Python 2; however, it can return unicodes for now.</span>\n<span class=\"ansi-green-fg ansi-bold\">    475</span>     <span style=\"font-style:italic;color:rgb(95,135,135)\"># See https://github.com/bartdag/py4j/issues/306 for more details.</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#fa4286b8 .cell execution_count=27}\n``` {.python .cell-code}\n# Replace features names and xid by a unique number\nfeature_name_partition = Window().orderBy('feature_name')\nxid_partition = Window().orderBy('xid')\n\ncol_idx = func.dense_rank().over(feature_name_partition)\nrow_idx = func.dense_rank().over(xid_partition)\n\ncsr = csr.withColumn('col', col_idx)\\\n    .withColumn('row', row_idx)\n\ncsr = csr.na.drop('any')\n\ncsr.head(n=5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[27], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Replace features names and xid by a unique number</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> feature_name_partition <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">Window</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">orderBy</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">feature_name</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> xid_partition <span style=\"color:rgb(98,98,98)\">=</span> Window()<span style=\"color:rgb(98,98,98)\">.</span>orderBy(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">xid</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> col_idx <span style=\"color:rgb(98,98,98)\">=</span> func<span style=\"color:rgb(98,98,98)\">.</span>dense_rank()<span style=\"color:rgb(98,98,98)\">.</span>over(feature_name_partition)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/utils.py:222</span>, in <span class=\"ansi-cyan-fg\">try_remote_window.&lt;locals&gt;.wrapped</span><span class=\"ansi-blue-fg\">(*args, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">    220</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(Window, f<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span>)(<span style=\"color:rgb(98,98,98)\">*</span>args, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs)\n<span class=\"ansi-green-fg ansi-bold\">    221</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg\">--&gt; 222</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/window.py:186</span>, in <span class=\"ansi-cyan-fg\">Window.orderBy</span><span class=\"ansi-blue-fg\">(*cols)</span>\n<span class=\"ansi-green-fg ansi-bold\">    137</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    138</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Creates a :class:`WindowSpec` with the ordering defined.</span>\n<span class=\"ansi-green-fg ansi-bold\">    139</span> \n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    183</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">+---+--------+----------+</span>\n<span class=\"ansi-green-fg ansi-bold\">    184</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    185</span> sc <span style=\"color:rgb(98,98,98)\">=</span> get_active_spark_context()\n<span class=\"ansi-green-fg\">--&gt; 186</span> jspec <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">cast</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">JVMView</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">sc</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jvm</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">org</span><span style=\"color:rgb(98,98,98)\">.</span>apache<span style=\"color:rgb(98,98,98)\">.</span>spark<span style=\"color:rgb(98,98,98)\">.</span>sql<span style=\"color:rgb(98,98,98)\">.</span>expressions<span style=\"color:rgb(98,98,98)\">.</span>Window<span style=\"color:rgb(98,98,98)\">.</span>orderBy(\n<span class=\"ansi-green-fg ansi-bold\">    187</span>     _to_java_cols(cols)\n<span class=\"ansi-green-fg ansi-bold\">    188</span> )\n<span class=\"ansi-green-fg ansi-bold\">    189</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> WindowSpec(jspec)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1712</span>, in <span class=\"ansi-cyan-fg\">JVMView.__getattr__</span><span class=\"ansi-blue-fg\">(self, name)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1709</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> name <span style=\"color:rgb(98,98,98)\">==</span> UserHelpAutoCompletion<span style=\"color:rgb(98,98,98)\">.</span>KEY:\n<span class=\"ansi-green-fg ansi-bold\">   1710</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> UserHelpAutoCompletion()\n<span class=\"ansi-green-fg\">-&gt; 1712</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1713</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFLECTION_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1714</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFL_GET_UNKNOWN_SUB_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_id</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1715</span> <span class=\"ansi-yellow-bg\">    </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">END_COMMAND_PART</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1716</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> answer <span style=\"color:rgb(98,98,98)\">==</span> proto<span style=\"color:rgb(98,98,98)\">.</span>SUCCESS_PACKAGE:\n<span class=\"ansi-green-fg ansi-bold\">   1717</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> JavaPackage(name, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_gateway_client, jvm_id<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_id)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#532e93c6 .cell execution_count=28}\n``` {.python .cell-code}\n# Let's save the result of our hard work into a new parquet file\noutput_path = './'\noutput_file = os.path.join(output_path, 'csr.parquet')\ncsr.write.parquet(output_file, mode='overwrite')\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[28], line 4</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> output_path <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">./</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> output_file <span style=\"color:rgb(98,98,98)\">=</span> os<span style=\"color:rgb(98,98,98)\">.</span>path<span style=\"color:rgb(98,98,98)\">.</span>join(output_path, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">csr.parquet</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg\">----&gt; 4</span> <span class=\"ansi-yellow-bg\">csr</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">write</span><span style=\"color:rgb(98,98,98)\">.</span>parquet(output_file, mode<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">overwrite</span><span style=\"color:rgb(175,0,0)\">'</span>)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:509</span>, in <span class=\"ansi-cyan-fg\">DataFrame.write</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    482</span> <span style=\"color:rgb(175,0,255)\">@property</span>\n<span class=\"ansi-green-fg ansi-bold\">    483</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">write</span>(<span style=\"color:rgb(0,135,0)\">self</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> DataFrameWriter:\n<span class=\"ansi-green-fg ansi-bold\">    484</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    485</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Interface for saving the content of the non-streaming :class:`DataFrame` out into external</span>\n<span class=\"ansi-green-fg ansi-bold\">    486</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    storage.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    507</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    &gt;&gt;&gt; _ = spark.sql(\"DROP TABLE tab2\")</span>\n<span class=\"ansi-green-fg ansi-bold\">    508</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">--&gt; 509</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">DataFrameWriter</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/readwriter.py:964</span>, in <span class=\"ansi-cyan-fg\">DataFrameWriter.__init__</span><span class=\"ansi-blue-fg\">(self, df)</span>\n<span class=\"ansi-green-fg ansi-bold\">    962</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_df <span style=\"color:rgb(98,98,98)\">=</span> df\n<span class=\"ansi-green-fg ansi-bold\">    963</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_spark <span style=\"color:rgb(98,98,98)\">=</span> df<span style=\"color:rgb(98,98,98)\">.</span>sparkSession\n<span class=\"ansi-green-fg\">--&gt; 964</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_jwrite <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jdf</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">write</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1321</span>, in <span class=\"ansi-cyan-fg\">JavaMember.__call__</span><span class=\"ansi-blue-fg\">(self, *args)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1314</span> args_command, temp_args <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_build_args(<span style=\"color:rgb(98,98,98)\">*</span>args)\n<span class=\"ansi-green-fg ansi-bold\">   1316</span> command <span style=\"color:rgb(98,98,98)\">=</span> proto<span style=\"color:rgb(98,98,98)\">.</span>CALL_COMMAND_NAME <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1317</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>command_header <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1318</span>     args_command <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1319</span>     proto<span style=\"color:rgb(98,98,98)\">.</span>END_COMMAND_PART\n<span class=\"ansi-green-fg\">-&gt; 1321</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">command</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1322</span> return_value <span style=\"color:rgb(98,98,98)\">=</span> get_return_value(\n<span class=\"ansi-green-fg ansi-bold\">   1323</span>     answer, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_client, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>target_id, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>name)\n<span class=\"ansi-green-fg ansi-bold\">   1325</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> temp_arg <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> temp_args:\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n# Preparation of the training dataset\n\n::: {#0708716c .cell execution_count=29}\n``` {.python .cell-code}\ncsr_path = './'\ncsr_file = os.path.join(csr_path, 'csr.parquet')\n\ndf = spark.read.parquet(csr_file)\ndf.head(n=5)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[29], line 4</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> csr_path <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">./</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> csr_file <span style=\"color:rgb(98,98,98)\">=</span> os<span style=\"color:rgb(98,98,98)\">.</span>path<span style=\"color:rgb(98,98,98)\">.</span>join(csr_path, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">csr.parquet</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg\">----&gt; 4</span> df <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">spark</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">read</span><span style=\"color:rgb(98,98,98)\">.</span>parquet(csr_file)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> df<span style=\"color:rgb(98,98,98)\">.</span>head(n<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">5</span>)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/session.py:1706</span>, in <span class=\"ansi-cyan-fg\">SparkSession.read</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1669</span> <span style=\"color:rgb(175,0,255)\">@property</span>\n<span class=\"ansi-green-fg ansi-bold\">   1670</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">read</span>(<span style=\"color:rgb(0,135,0)\">self</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> DataFrameReader:\n<span class=\"ansi-green-fg ansi-bold\">   1671</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">   1672</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Returns a :class:`DataFrameReader` that can be used to read data</span>\n<span class=\"ansi-green-fg ansi-bold\">   1673</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    in as a :class:`DataFrame`.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1704</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    +---+------------+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1705</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1706</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">DataFrameReader</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/readwriter.py:70</span>, in <span class=\"ansi-cyan-fg\">DataFrameReader.__init__</span><span class=\"ansi-blue-fg\">(self, spark)</span>\n<span class=\"ansi-green-fg ansi-bold\">     69</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">__init__</span>(<span style=\"color:rgb(0,135,0)\">self</span>, spark: <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">SparkSession</span><span style=\"color:rgb(175,0,0)\">\"</span>):\n<span class=\"ansi-green-fg\">---&gt; 70</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_jreader <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">spark</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jsparkSession</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">read</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">     71</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_spark <span style=\"color:rgb(98,98,98)\">=</span> spark\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1321</span>, in <span class=\"ansi-cyan-fg\">JavaMember.__call__</span><span class=\"ansi-blue-fg\">(self, *args)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1314</span> args_command, temp_args <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_build_args(<span style=\"color:rgb(98,98,98)\">*</span>args)\n<span class=\"ansi-green-fg ansi-bold\">   1316</span> command <span style=\"color:rgb(98,98,98)\">=</span> proto<span style=\"color:rgb(98,98,98)\">.</span>CALL_COMMAND_NAME <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1317</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>command_header <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1318</span>     args_command <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1319</span>     proto<span style=\"color:rgb(98,98,98)\">.</span>END_COMMAND_PART\n<span class=\"ansi-green-fg\">-&gt; 1321</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">command</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1322</span> return_value <span style=\"color:rgb(98,98,98)\">=</span> get_return_value(\n<span class=\"ansi-green-fg ansi-bold\">   1323</span>     answer, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_client, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>target_id, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>name)\n<span class=\"ansi-green-fg ansi-bold\">   1325</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> temp_arg <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> temp_args:\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#431be965 .cell execution_count=30}\n``` {.python .cell-code}\ndf.count()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[30], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">count</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:1240</span>, in <span class=\"ansi-cyan-fg\">DataFrame.count</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1217</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">count</span>(<span style=\"color:rgb(0,135,0)\">self</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(0,135,0)\">int</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1218</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Returns the number of rows in this :class:`DataFrame`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1219</span> \n<span class=\"ansi-green-fg ansi-bold\">   1220</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    .. versionadded:: 1.3.0</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1238</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    3</span>\n<span class=\"ansi-green-fg ansi-bold\">   1239</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1240</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">int</span>(<span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jdf</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">count</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1321</span>, in <span class=\"ansi-cyan-fg\">JavaMember.__call__</span><span class=\"ansi-blue-fg\">(self, *args)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1314</span> args_command, temp_args <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_build_args(<span style=\"color:rgb(98,98,98)\">*</span>args)\n<span class=\"ansi-green-fg ansi-bold\">   1316</span> command <span style=\"color:rgb(98,98,98)\">=</span> proto<span style=\"color:rgb(98,98,98)\">.</span>CALL_COMMAND_NAME <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1317</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>command_header <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1318</span>     args_command <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1319</span>     proto<span style=\"color:rgb(98,98,98)\">.</span>END_COMMAND_PART\n<span class=\"ansi-green-fg\">-&gt; 1321</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">command</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1322</span> return_value <span style=\"color:rgb(98,98,98)\">=</span> get_return_value(\n<span class=\"ansi-green-fg ansi-bold\">   1323</span>     answer, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_client, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>target_id, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>name)\n<span class=\"ansi-green-fg ansi-bold\">   1325</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> temp_arg <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> temp_args:\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#ad7b1445 .cell execution_count=31}\n``` {.python .cell-code}\n# What are the features related to campaign_id 1204 ?\nfeatures_names = \\\n    df.select('feature_name')\\\n    .distinct()\\\n    .toPandas()['feature_name']\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[31], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># What are the features related to campaign_id 1204 ?</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> features_names <span style=\"color:rgb(98,98,98)\">=</span> \\\n<span class=\"ansi-green-fg\">----&gt; 3</span>     <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">select</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">feature_name</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\\\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     <span style=\"color:rgb(98,98,98)\">.</span>distinct()\\\n<span class=\"ansi-green-fg ansi-bold\">      5</span>     <span style=\"color:rgb(98,98,98)\">.</span>toPandas()[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">feature_name</span><span style=\"color:rgb(175,0,0)\">'</span>]\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:3229</span>, in <span class=\"ansi-cyan-fg\">DataFrame.select</span><span class=\"ansi-blue-fg\">(self, *cols)</span>\n<span class=\"ansi-green-fg ansi-bold\">   3184</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">select</span>(<span style=\"color:rgb(0,135,0)\">self</span>, <span style=\"color:rgb(98,98,98)\">*</span>cols: <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">ColumnOrName</span><span style=\"color:rgb(175,0,0)\">\"</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">DataFrame</span><span style=\"color:rgb(175,0,0)\">\"</span>:  <span style=\"font-style:italic;color:rgb(95,135,135)\"># type: ignore[misc]</span>\n<span class=\"ansi-green-fg ansi-bold\">   3185</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Projects a set of expressions and returns a new :class:`DataFrame`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   3186</span> \n<span class=\"ansi-green-fg ansi-bold\">   3187</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    .. versionadded:: 1.3.0</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   3227</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    +-----+---+</span>\n<span class=\"ansi-green-fg ansi-bold\">   3228</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 3229</span>     jdf <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_jdf<span style=\"color:rgb(98,98,98)\">.</span>select(<span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jcols</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">cols</span><span class=\"ansi-yellow-bg\">)</span>)\n<span class=\"ansi-green-fg ansi-bold\">   3230</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> DataFrame(jdf, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>sparkSession)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:2766</span>, in <span class=\"ansi-cyan-fg\">DataFrame._jcols</span><span class=\"ansi-blue-fg\">(self, *cols)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2764</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">len</span>(cols) <span style=\"color:rgb(98,98,98)\">==</span> <span style=\"color:rgb(98,98,98)\">1</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">and</span> <span style=\"color:rgb(0,135,0)\">isinstance</span>(cols[<span style=\"color:rgb(98,98,98)\">0</span>], <span style=\"color:rgb(0,135,0)\">list</span>):\n<span class=\"ansi-green-fg ansi-bold\">   2765</span>     cols <span style=\"color:rgb(98,98,98)\">=</span> cols[<span style=\"color:rgb(98,98,98)\">0</span>]\n<span class=\"ansi-green-fg\">-&gt; 2766</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jseq</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">cols</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">_to_java_column</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:2753</span>, in <span class=\"ansi-cyan-fg\">DataFrame._jseq</span><span class=\"ansi-blue-fg\">(self, cols, converter)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2747</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_jseq</span>(\n<span class=\"ansi-green-fg ansi-bold\">   2748</span>     <span style=\"color:rgb(0,135,0)\">self</span>,\n<span class=\"ansi-green-fg ansi-bold\">   2749</span>     cols: Sequence,\n<span class=\"ansi-green-fg ansi-bold\">   2750</span>     converter: Optional[Callable[<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(98,98,98)\">.</span>, Union[<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">PrimitiveType</span><span style=\"color:rgb(175,0,0)\">\"</span>, JavaObject]]] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>,\n<span class=\"ansi-green-fg ansi-bold\">   2751</span> ) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> JavaObject:\n<span class=\"ansi-green-fg ansi-bold\">   2752</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Return a JVM Seq of Columns from a list of Column or names\"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 2753</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">_to_seq</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">sparkSession</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_sc</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">cols</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">converter</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/column.py:88</span>, in <span class=\"ansi-cyan-fg\">_to_seq</span><span class=\"ansi-blue-fg\">(sc, cols, converter)</span>\n<span class=\"ansi-green-fg ansi-bold\">     81</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     82</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Convert a list of Columns (or names) into a JVM Seq of Column.</span>\n<span class=\"ansi-green-fg ansi-bold\">     83</span> \n<span class=\"ansi-green-fg ansi-bold\">     84</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">An optional `converter` could be used to convert items in `cols`</span>\n<span class=\"ansi-green-fg ansi-bold\">     85</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">into JVM Column objects.</span>\n<span class=\"ansi-green-fg ansi-bold\">     86</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     87</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> converter:\n<span class=\"ansi-green-fg\">---&gt; 88</span>     cols <span style=\"color:rgb(98,98,98)\">=</span> [<span class=\"ansi-yellow-bg\">converter</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">)</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> c <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> cols]\n<span class=\"ansi-green-fg ansi-bold\">     89</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">assert</span> sc<span style=\"color:rgb(98,98,98)\">.</span>_jvm <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg ansi-bold\">     90</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> sc<span style=\"color:rgb(98,98,98)\">.</span>_jvm<span style=\"color:rgb(98,98,98)\">.</span>PythonUtils<span style=\"color:rgb(98,98,98)\">.</span>toSeq(cols)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/column.py:63</span>, in <span class=\"ansi-cyan-fg\">_to_java_column</span><span class=\"ansi-blue-fg\">(col)</span>\n<span class=\"ansi-green-fg ansi-bold\">     61</span>     jcol <span style=\"color:rgb(98,98,98)\">=</span> col<span style=\"color:rgb(98,98,98)\">.</span>_jc\n<span class=\"ansi-green-fg ansi-bold\">     62</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">elif</span> <span style=\"color:rgb(0,135,0)\">isinstance</span>(col, <span style=\"color:rgb(0,135,0)\">str</span>):\n<span class=\"ansi-green-fg\">---&gt; 63</span>     jcol <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">_create_column_from_name</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">col</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">     64</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg ansi-bold\">     65</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span> PySparkTypeError(\n<span class=\"ansi-green-fg ansi-bold\">     66</span>         error_class<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">NOT_COLUMN_OR_STR</span><span style=\"color:rgb(175,0,0)\">\"</span>,\n<span class=\"ansi-green-fg ansi-bold\">     67</span>         message_parameters<span style=\"color:rgb(98,98,98)\">=</span>{<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">arg_name</span><span style=\"color:rgb(175,0,0)\">\"</span>: <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">col</span><span style=\"color:rgb(175,0,0)\">\"</span>, <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">arg_type</span><span style=\"color:rgb(175,0,0)\">\"</span>: <span style=\"color:rgb(0,135,0)\">type</span>(col)<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span>},\n<span class=\"ansi-green-fg ansi-bold\">     68</span>     )\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/column.py:56</span>, in <span class=\"ansi-cyan-fg\">_create_column_from_name</span><span class=\"ansi-blue-fg\">(name)</span>\n<span class=\"ansi-green-fg ansi-bold\">     54</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_column_from_name</span>(name: <span style=\"color:rgb(0,135,0)\">str</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">Column</span><span style=\"color:rgb(175,0,0)\">\"</span>:\n<span class=\"ansi-green-fg ansi-bold\">     55</span>     sc <span style=\"color:rgb(98,98,98)\">=</span> get_active_spark_context()\n<span class=\"ansi-green-fg\">---&gt; 56</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">cast</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">JVMView</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">sc</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jvm</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">functions</span><span style=\"color:rgb(98,98,98)\">.</span>col(name)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1712</span>, in <span class=\"ansi-cyan-fg\">JVMView.__getattr__</span><span class=\"ansi-blue-fg\">(self, name)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1709</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> name <span style=\"color:rgb(98,98,98)\">==</span> UserHelpAutoCompletion<span style=\"color:rgb(98,98,98)\">.</span>KEY:\n<span class=\"ansi-green-fg ansi-bold\">   1710</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> UserHelpAutoCompletion()\n<span class=\"ansi-green-fg\">-&gt; 1712</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1713</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFLECTION_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1714</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFL_GET_UNKNOWN_SUB_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_id</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1715</span> <span class=\"ansi-yellow-bg\">    </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">END_COMMAND_PART</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1716</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> answer <span style=\"color:rgb(98,98,98)\">==</span> proto<span style=\"color:rgb(98,98,98)\">.</span>SUCCESS_PACKAGE:\n<span class=\"ansi-green-fg ansi-bold\">   1717</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> JavaPackage(name, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_gateway_client, jvm_id<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_id)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#96ae23c7 .cell execution_count=32}\n``` {.python .cell-code}\nfeatures_names\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[32], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">features_names</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'features_names' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#493b6a8e .cell execution_count=33}\n``` {.python .cell-code}\n[feature_name for feature_name in features_names if '1204' in feature_name]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[33], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> [feature_name <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> feature_name <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> <span class=\"ansi-yellow-bg\">features_names</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">1204</span><span style=\"color:rgb(175,0,0)\">'</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> feature_name]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'features_names' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8a03c850 .cell execution_count=34}\n``` {.python .cell-code}\n# Look for the xid that have at least one exposure to campaign 1204\nkeep = func.when(\n    (col('feature_name') == 'n_actions_per_category_id#C#1204.0') |\n    (col('feature_name') == 'n_actions_per_category_id#O#1204.0'),\n    1).otherwise(0)\ndf = df.withColumn('keep', keep)\n\ndf.where(col('keep') > 0).count()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[34], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Look for the xid that have at least one exposure to campaign 1204</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> keep <span style=\"color:rgb(98,98,98)\">=</span> func<span style=\"color:rgb(98,98,98)\">.</span>when(\n<span class=\"ansi-green-fg\">----&gt; 3</span>     (<span class=\"ansi-yellow-bg\">col</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">feature_name</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span> <span style=\"color:rgb(98,98,98)\">==</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">n_actions_per_category_id#C#1204.0</span><span style=\"color:rgb(175,0,0)\">'</span>) <span style=\"color:rgb(98,98,98)\">|</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span>     (col(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">feature_name</span><span style=\"color:rgb(175,0,0)\">'</span>) <span style=\"color:rgb(98,98,98)\">==</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">n_actions_per_category_id#O#1204.0</span><span style=\"color:rgb(175,0,0)\">'</span>),\n<span class=\"ansi-green-fg ansi-bold\">      5</span>     <span style=\"color:rgb(98,98,98)\">1</span>)<span style=\"color:rgb(98,98,98)\">.</span>otherwise(<span style=\"color:rgb(98,98,98)\">0</span>)\n<span class=\"ansi-green-fg ansi-bold\">      6</span> df <span style=\"color:rgb(98,98,98)\">=</span> df<span style=\"color:rgb(98,98,98)\">.</span>withColumn(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">keep</span><span style=\"color:rgb(175,0,0)\">'</span>, keep)\n<span class=\"ansi-green-fg ansi-bold\">      8</span> df<span style=\"color:rgb(98,98,98)\">.</span>where(col(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">keep</span><span style=\"color:rgb(175,0,0)\">'</span>) <span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(98,98,98)\">0</span>)<span style=\"color:rgb(98,98,98)\">.</span>count()\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/utils.py:174</span>, in <span class=\"ansi-cyan-fg\">try_remote_functions.&lt;locals&gt;.wrapped</span><span class=\"ansi-blue-fg\">(*args, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">    172</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(functions, f<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span>)(<span style=\"color:rgb(98,98,98)\">*</span>args, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs)\n<span class=\"ansi-green-fg ansi-bold\">    173</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg\">--&gt; 174</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/functions.py:223</span>, in <span class=\"ansi-cyan-fg\">col</span><span class=\"ansi-blue-fg\">(col)</span>\n<span class=\"ansi-green-fg ansi-bold\">    196</span> <span style=\"color:rgb(175,0,255)\">@try_remote_functions</span>\n<span class=\"ansi-green-fg ansi-bold\">    197</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">col</span>(col: <span style=\"color:rgb(0,135,0)\">str</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> Column:\n<span class=\"ansi-green-fg ansi-bold\">    198</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    199</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Returns a :class:`~pyspark.sql.Column` based on the given column name.</span>\n<span class=\"ansi-green-fg ansi-bold\">    200</span> \n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    221</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Column&lt;'x'&gt;</span>\n<span class=\"ansi-green-fg ansi-bold\">    222</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">--&gt; 223</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">_invoke_function</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">col</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">col</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/functions.py:96</span>, in <span class=\"ansi-cyan-fg\">_invoke_function</span><span class=\"ansi-blue-fg\">(name, *args)</span>\n<span class=\"ansi-green-fg ansi-bold\">     91</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     92</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Invokes JVM function identified by name with args</span>\n<span class=\"ansi-green-fg ansi-bold\">     93</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">and wraps the result with :class:`~pyspark.sql.Column`.</span>\n<span class=\"ansi-green-fg ansi-bold\">     94</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     95</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">assert</span> SparkContext<span style=\"color:rgb(98,98,98)\">.</span>_active_spark_context <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg\">---&gt; 96</span> jf <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">_get_jvm_function</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">SparkContext</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_active_spark_context</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">     97</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> Column(jf(<span style=\"color:rgb(98,98,98)\">*</span>args))\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/functions.py:87</span>, in <span class=\"ansi-cyan-fg\">_get_jvm_function</span><span class=\"ansi-blue-fg\">(name, sc)</span>\n<span class=\"ansi-green-fg ansi-bold\">     82</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     83</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Retrieves JVM function identified by name from</span>\n<span class=\"ansi-green-fg ansi-bold\">     84</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Java gateway associated with sc.</span>\n<span class=\"ansi-green-fg ansi-bold\">     85</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     86</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">assert</span> sc<span style=\"color:rgb(98,98,98)\">.</span>_jvm <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg\">---&gt; 87</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(<span class=\"ansi-yellow-bg\">sc</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jvm</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">functions</span>, name)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1712</span>, in <span class=\"ansi-cyan-fg\">JVMView.__getattr__</span><span class=\"ansi-blue-fg\">(self, name)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1709</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> name <span style=\"color:rgb(98,98,98)\">==</span> UserHelpAutoCompletion<span style=\"color:rgb(98,98,98)\">.</span>KEY:\n<span class=\"ansi-green-fg ansi-bold\">   1710</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> UserHelpAutoCompletion()\n<span class=\"ansi-green-fg\">-&gt; 1712</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1713</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFLECTION_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1714</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFL_GET_UNKNOWN_SUB_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_id</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1715</span> <span class=\"ansi-yellow-bg\">    </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">END_COMMAND_PART</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1716</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> answer <span style=\"color:rgb(98,98,98)\">==</span> proto<span style=\"color:rgb(98,98,98)\">.</span>SUCCESS_PACKAGE:\n<span class=\"ansi-green-fg ansi-bold\">   1717</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> JavaPackage(name, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_gateway_client, jvm_id<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_id)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#23b2ad28 .cell execution_count=35}\n``` {.python .cell-code}\n# Sum of the keeps :)\nxid_partition = Window.partitionBy('xid')\nsum_keep = func.sum(col('keep')).over(xid_partition)\ndf = df.withColumn('sum_keep', sum_keep)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[35], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Sum of the keeps :)</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> xid_partition <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">Window</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">partitionBy</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">xid</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> sum_keep <span style=\"color:rgb(98,98,98)\">=</span> func<span style=\"color:rgb(98,98,98)\">.</span>sum(col(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">keep</span><span style=\"color:rgb(175,0,0)\">'</span>))<span style=\"color:rgb(98,98,98)\">.</span>over(xid_partition)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> df <span style=\"color:rgb(98,98,98)\">=</span> df<span style=\"color:rgb(98,98,98)\">.</span>withColumn(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">sum_keep</span><span style=\"color:rgb(175,0,0)\">'</span>, sum_keep)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/utils.py:222</span>, in <span class=\"ansi-cyan-fg\">try_remote_window.&lt;locals&gt;.wrapped</span><span class=\"ansi-blue-fg\">(*args, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">    220</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(Window, f<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span>)(<span style=\"color:rgb(98,98,98)\">*</span>args, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs)\n<span class=\"ansi-green-fg ansi-bold\">    221</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg\">--&gt; 222</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/window.py:129</span>, in <span class=\"ansi-cyan-fg\">Window.partitionBy</span><span class=\"ansi-blue-fg\">(*cols)</span>\n<span class=\"ansi-green-fg ansi-bold\">     80</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     81</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Creates a :class:`WindowSpec` with the partitioning defined.</span>\n<span class=\"ansi-green-fg ansi-bold\">     82</span> \n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    126</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">+---+--------+----------+</span>\n<span class=\"ansi-green-fg ansi-bold\">    127</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    128</span> sc <span style=\"color:rgb(98,98,98)\">=</span> get_active_spark_context()\n<span class=\"ansi-green-fg\">--&gt; 129</span> jspec <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">cast</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">JVMView</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">sc</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jvm</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">org</span><span style=\"color:rgb(98,98,98)\">.</span>apache<span style=\"color:rgb(98,98,98)\">.</span>spark<span style=\"color:rgb(98,98,98)\">.</span>sql<span style=\"color:rgb(98,98,98)\">.</span>expressions<span style=\"color:rgb(98,98,98)\">.</span>Window<span style=\"color:rgb(98,98,98)\">.</span>partitionBy(\n<span class=\"ansi-green-fg ansi-bold\">    130</span>     _to_java_cols(cols)\n<span class=\"ansi-green-fg ansi-bold\">    131</span> )\n<span class=\"ansi-green-fg ansi-bold\">    132</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> WindowSpec(jspec)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1712</span>, in <span class=\"ansi-cyan-fg\">JVMView.__getattr__</span><span class=\"ansi-blue-fg\">(self, name)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1709</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> name <span style=\"color:rgb(98,98,98)\">==</span> UserHelpAutoCompletion<span style=\"color:rgb(98,98,98)\">.</span>KEY:\n<span class=\"ansi-green-fg ansi-bold\">   1710</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> UserHelpAutoCompletion()\n<span class=\"ansi-green-fg\">-&gt; 1712</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1713</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFLECTION_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1714</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFL_GET_UNKNOWN_SUB_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_id</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1715</span> <span class=\"ansi-yellow-bg\">    </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">END_COMMAND_PART</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1716</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> answer <span style=\"color:rgb(98,98,98)\">==</span> proto<span style=\"color:rgb(98,98,98)\">.</span>SUCCESS_PACKAGE:\n<span class=\"ansi-green-fg ansi-bold\">   1717</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> JavaPackage(name, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_gateway_client, jvm_id<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_id)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#a6bd9308 .cell execution_count=36}\n``` {.python .cell-code}\n# Let's keep the xid exposed to 1204\ndf = df.where(col('sum_keep') > 0)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[36], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Let's keep the xid exposed to 1204</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> df <span style=\"color:rgb(98,98,98)\">=</span> df<span style=\"color:rgb(98,98,98)\">.</span>where(<span class=\"ansi-yellow-bg\">col</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">sum_keep</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span> <span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(98,98,98)\">0</span>)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/utils.py:174</span>, in <span class=\"ansi-cyan-fg\">try_remote_functions.&lt;locals&gt;.wrapped</span><span class=\"ansi-blue-fg\">(*args, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">    172</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(functions, f<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span>)(<span style=\"color:rgb(98,98,98)\">*</span>args, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs)\n<span class=\"ansi-green-fg ansi-bold\">    173</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg\">--&gt; 174</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/functions.py:223</span>, in <span class=\"ansi-cyan-fg\">col</span><span class=\"ansi-blue-fg\">(col)</span>\n<span class=\"ansi-green-fg ansi-bold\">    196</span> <span style=\"color:rgb(175,0,255)\">@try_remote_functions</span>\n<span class=\"ansi-green-fg ansi-bold\">    197</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">col</span>(col: <span style=\"color:rgb(0,135,0)\">str</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> Column:\n<span class=\"ansi-green-fg ansi-bold\">    198</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    199</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Returns a :class:`~pyspark.sql.Column` based on the given column name.</span>\n<span class=\"ansi-green-fg ansi-bold\">    200</span> \n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    221</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    Column&lt;'x'&gt;</span>\n<span class=\"ansi-green-fg ansi-bold\">    222</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">--&gt; 223</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">_invoke_function</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">col</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">col</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/functions.py:96</span>, in <span class=\"ansi-cyan-fg\">_invoke_function</span><span class=\"ansi-blue-fg\">(name, *args)</span>\n<span class=\"ansi-green-fg ansi-bold\">     91</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     92</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Invokes JVM function identified by name with args</span>\n<span class=\"ansi-green-fg ansi-bold\">     93</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">and wraps the result with :class:`~pyspark.sql.Column`.</span>\n<span class=\"ansi-green-fg ansi-bold\">     94</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     95</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">assert</span> SparkContext<span style=\"color:rgb(98,98,98)\">.</span>_active_spark_context <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg\">---&gt; 96</span> jf <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">_get_jvm_function</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">SparkContext</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_active_spark_context</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">     97</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> Column(jf(<span style=\"color:rgb(98,98,98)\">*</span>args))\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/functions.py:87</span>, in <span class=\"ansi-cyan-fg\">_get_jvm_function</span><span class=\"ansi-blue-fg\">(name, sc)</span>\n<span class=\"ansi-green-fg ansi-bold\">     82</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     83</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Retrieves JVM function identified by name from</span>\n<span class=\"ansi-green-fg ansi-bold\">     84</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Java gateway associated with sc.</span>\n<span class=\"ansi-green-fg ansi-bold\">     85</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     86</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">assert</span> sc<span style=\"color:rgb(98,98,98)\">.</span>_jvm <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg\">---&gt; 87</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(<span class=\"ansi-yellow-bg\">sc</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jvm</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">functions</span>, name)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1712</span>, in <span class=\"ansi-cyan-fg\">JVMView.__getattr__</span><span class=\"ansi-blue-fg\">(self, name)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1709</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> name <span style=\"color:rgb(98,98,98)\">==</span> UserHelpAutoCompletion<span style=\"color:rgb(98,98,98)\">.</span>KEY:\n<span class=\"ansi-green-fg ansi-bold\">   1710</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> UserHelpAutoCompletion()\n<span class=\"ansi-green-fg\">-&gt; 1712</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1713</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFLECTION_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1714</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFL_GET_UNKNOWN_SUB_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_id</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1715</span> <span class=\"ansi-yellow-bg\">    </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">END_COMMAND_PART</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1716</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> answer <span style=\"color:rgb(98,98,98)\">==</span> proto<span style=\"color:rgb(98,98,98)\">.</span>SUCCESS_PACKAGE:\n<span class=\"ansi-green-fg ansi-bold\">   1717</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> JavaPackage(name, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_gateway_client, jvm_id<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_id)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#8965880d .cell execution_count=37}\n``` {.python .cell-code}\ndf.count()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[37], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">count</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:1240</span>, in <span class=\"ansi-cyan-fg\">DataFrame.count</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1217</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">count</span>(<span style=\"color:rgb(0,135,0)\">self</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(0,135,0)\">int</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1218</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Returns the number of rows in this :class:`DataFrame`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1219</span> \n<span class=\"ansi-green-fg ansi-bold\">   1220</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    .. versionadded:: 1.3.0</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1238</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    3</span>\n<span class=\"ansi-green-fg ansi-bold\">   1239</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1240</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">int</span>(<span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jdf</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">count</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1321</span>, in <span class=\"ansi-cyan-fg\">JavaMember.__call__</span><span class=\"ansi-blue-fg\">(self, *args)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1314</span> args_command, temp_args <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_build_args(<span style=\"color:rgb(98,98,98)\">*</span>args)\n<span class=\"ansi-green-fg ansi-bold\">   1316</span> command <span style=\"color:rgb(98,98,98)\">=</span> proto<span style=\"color:rgb(98,98,98)\">.</span>CALL_COMMAND_NAME <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1317</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>command_header <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1318</span>     args_command <span style=\"color:rgb(98,98,98)\">+</span>\\\n<span class=\"ansi-green-fg ansi-bold\">   1319</span>     proto<span style=\"color:rgb(98,98,98)\">.</span>END_COMMAND_PART\n<span class=\"ansi-green-fg\">-&gt; 1321</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">command</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1322</span> return_value <span style=\"color:rgb(98,98,98)\">=</span> get_return_value(\n<span class=\"ansi-green-fg ansi-bold\">   1323</span>     answer, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_client, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>target_id, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>name)\n<span class=\"ansi-green-fg ansi-bold\">   1325</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> temp_arg <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> temp_args:\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#010e4f76 .cell execution_count=38}\n``` {.python .cell-code}\ndf.select('xid').distinct().count()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[38], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">select</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">xid</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\">.</span>distinct()<span style=\"color:rgb(98,98,98)\">.</span>count()\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:3229</span>, in <span class=\"ansi-cyan-fg\">DataFrame.select</span><span class=\"ansi-blue-fg\">(self, *cols)</span>\n<span class=\"ansi-green-fg ansi-bold\">   3184</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">select</span>(<span style=\"color:rgb(0,135,0)\">self</span>, <span style=\"color:rgb(98,98,98)\">*</span>cols: <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">ColumnOrName</span><span style=\"color:rgb(175,0,0)\">\"</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">DataFrame</span><span style=\"color:rgb(175,0,0)\">\"</span>:  <span style=\"font-style:italic;color:rgb(95,135,135)\"># type: ignore[misc]</span>\n<span class=\"ansi-green-fg ansi-bold\">   3185</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Projects a set of expressions and returns a new :class:`DataFrame`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   3186</span> \n<span class=\"ansi-green-fg ansi-bold\">   3187</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    .. versionadded:: 1.3.0</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   3227</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    +-----+---+</span>\n<span class=\"ansi-green-fg ansi-bold\">   3228</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 3229</span>     jdf <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_jdf<span style=\"color:rgb(98,98,98)\">.</span>select(<span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jcols</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">cols</span><span class=\"ansi-yellow-bg\">)</span>)\n<span class=\"ansi-green-fg ansi-bold\">   3230</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> DataFrame(jdf, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>sparkSession)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:2766</span>, in <span class=\"ansi-cyan-fg\">DataFrame._jcols</span><span class=\"ansi-blue-fg\">(self, *cols)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2764</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">len</span>(cols) <span style=\"color:rgb(98,98,98)\">==</span> <span style=\"color:rgb(98,98,98)\">1</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">and</span> <span style=\"color:rgb(0,135,0)\">isinstance</span>(cols[<span style=\"color:rgb(98,98,98)\">0</span>], <span style=\"color:rgb(0,135,0)\">list</span>):\n<span class=\"ansi-green-fg ansi-bold\">   2765</span>     cols <span style=\"color:rgb(98,98,98)\">=</span> cols[<span style=\"color:rgb(98,98,98)\">0</span>]\n<span class=\"ansi-green-fg\">-&gt; 2766</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jseq</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">cols</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">_to_java_column</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:2753</span>, in <span class=\"ansi-cyan-fg\">DataFrame._jseq</span><span class=\"ansi-blue-fg\">(self, cols, converter)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2747</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_jseq</span>(\n<span class=\"ansi-green-fg ansi-bold\">   2748</span>     <span style=\"color:rgb(0,135,0)\">self</span>,\n<span class=\"ansi-green-fg ansi-bold\">   2749</span>     cols: Sequence,\n<span class=\"ansi-green-fg ansi-bold\">   2750</span>     converter: Optional[Callable[<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(98,98,98)\">.</span>, Union[<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">PrimitiveType</span><span style=\"color:rgb(175,0,0)\">\"</span>, JavaObject]]] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>,\n<span class=\"ansi-green-fg ansi-bold\">   2751</span> ) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> JavaObject:\n<span class=\"ansi-green-fg ansi-bold\">   2752</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Return a JVM Seq of Columns from a list of Column or names\"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 2753</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">_to_seq</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">sparkSession</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_sc</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">cols</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">converter</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/column.py:88</span>, in <span class=\"ansi-cyan-fg\">_to_seq</span><span class=\"ansi-blue-fg\">(sc, cols, converter)</span>\n<span class=\"ansi-green-fg ansi-bold\">     81</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     82</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Convert a list of Columns (or names) into a JVM Seq of Column.</span>\n<span class=\"ansi-green-fg ansi-bold\">     83</span> \n<span class=\"ansi-green-fg ansi-bold\">     84</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">An optional `converter` could be used to convert items in `cols`</span>\n<span class=\"ansi-green-fg ansi-bold\">     85</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">into JVM Column objects.</span>\n<span class=\"ansi-green-fg ansi-bold\">     86</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     87</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> converter:\n<span class=\"ansi-green-fg\">---&gt; 88</span>     cols <span style=\"color:rgb(98,98,98)\">=</span> [<span class=\"ansi-yellow-bg\">converter</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">)</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> c <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> cols]\n<span class=\"ansi-green-fg ansi-bold\">     89</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">assert</span> sc<span style=\"color:rgb(98,98,98)\">.</span>_jvm <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg ansi-bold\">     90</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> sc<span style=\"color:rgb(98,98,98)\">.</span>_jvm<span style=\"color:rgb(98,98,98)\">.</span>PythonUtils<span style=\"color:rgb(98,98,98)\">.</span>toSeq(cols)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/column.py:63</span>, in <span class=\"ansi-cyan-fg\">_to_java_column</span><span class=\"ansi-blue-fg\">(col)</span>\n<span class=\"ansi-green-fg ansi-bold\">     61</span>     jcol <span style=\"color:rgb(98,98,98)\">=</span> col<span style=\"color:rgb(98,98,98)\">.</span>_jc\n<span class=\"ansi-green-fg ansi-bold\">     62</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">elif</span> <span style=\"color:rgb(0,135,0)\">isinstance</span>(col, <span style=\"color:rgb(0,135,0)\">str</span>):\n<span class=\"ansi-green-fg\">---&gt; 63</span>     jcol <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">_create_column_from_name</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">col</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">     64</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg ansi-bold\">     65</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span> PySparkTypeError(\n<span class=\"ansi-green-fg ansi-bold\">     66</span>         error_class<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">NOT_COLUMN_OR_STR</span><span style=\"color:rgb(175,0,0)\">\"</span>,\n<span class=\"ansi-green-fg ansi-bold\">     67</span>         message_parameters<span style=\"color:rgb(98,98,98)\">=</span>{<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">arg_name</span><span style=\"color:rgb(175,0,0)\">\"</span>: <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">col</span><span style=\"color:rgb(175,0,0)\">\"</span>, <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">arg_type</span><span style=\"color:rgb(175,0,0)\">\"</span>: <span style=\"color:rgb(0,135,0)\">type</span>(col)<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span>},\n<span class=\"ansi-green-fg ansi-bold\">     68</span>     )\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/column.py:56</span>, in <span class=\"ansi-cyan-fg\">_create_column_from_name</span><span class=\"ansi-blue-fg\">(name)</span>\n<span class=\"ansi-green-fg ansi-bold\">     54</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_column_from_name</span>(name: <span style=\"color:rgb(0,135,0)\">str</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">Column</span><span style=\"color:rgb(175,0,0)\">\"</span>:\n<span class=\"ansi-green-fg ansi-bold\">     55</span>     sc <span style=\"color:rgb(98,98,98)\">=</span> get_active_spark_context()\n<span class=\"ansi-green-fg\">---&gt; 56</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">cast</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">JVMView</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">sc</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jvm</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">functions</span><span style=\"color:rgb(98,98,98)\">.</span>col(name)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1712</span>, in <span class=\"ansi-cyan-fg\">JVMView.__getattr__</span><span class=\"ansi-blue-fg\">(self, name)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1709</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> name <span style=\"color:rgb(98,98,98)\">==</span> UserHelpAutoCompletion<span style=\"color:rgb(98,98,98)\">.</span>KEY:\n<span class=\"ansi-green-fg ansi-bold\">   1710</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> UserHelpAutoCompletion()\n<span class=\"ansi-green-fg\">-&gt; 1712</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1713</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFLECTION_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1714</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFL_GET_UNKNOWN_SUB_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_id</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1715</span> <span class=\"ansi-yellow-bg\">    </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">END_COMMAND_PART</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1716</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> answer <span style=\"color:rgb(98,98,98)\">==</span> proto<span style=\"color:rgb(98,98,98)\">.</span>SUCCESS_PACKAGE:\n<span class=\"ansi-green-fg ansi-bold\">   1717</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> JavaPackage(name, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_gateway_client, jvm_id<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_id)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c674ffd2 .cell execution_count=39}\n``` {.python .cell-code}\nrow_partition = Window().orderBy('row')\ncol_partition = Window().orderBy('col')\nrow_new = func.dense_rank().over(row_partition)\ncol_new = func.dense_rank().over(col_partition)\ndf = df.withColumn('row_new', row_new)\ndf = df.withColumn('col_new', col_new)\ncsr_data = df.select('row_new', 'col_new', 'value').toPandas()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[39], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> row_partition <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">Window</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">orderBy</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">row</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> col_partition <span style=\"color:rgb(98,98,98)\">=</span> Window()<span style=\"color:rgb(98,98,98)\">.</span>orderBy(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">col</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      3</span> row_new <span style=\"color:rgb(98,98,98)\">=</span> func<span style=\"color:rgb(98,98,98)\">.</span>dense_rank()<span style=\"color:rgb(98,98,98)\">.</span>over(row_partition)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/utils.py:222</span>, in <span class=\"ansi-cyan-fg\">try_remote_window.&lt;locals&gt;.wrapped</span><span class=\"ansi-blue-fg\">(*args, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">    220</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\">getattr</span>(Window, f<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span>)(<span style=\"color:rgb(98,98,98)\">*</span>args, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs)\n<span class=\"ansi-green-fg ansi-bold\">    221</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg\">--&gt; 222</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">f</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">args</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">kwargs</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/window.py:186</span>, in <span class=\"ansi-cyan-fg\">Window.orderBy</span><span class=\"ansi-blue-fg\">(*cols)</span>\n<span class=\"ansi-green-fg ansi-bold\">    137</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    138</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Creates a :class:`WindowSpec` with the ordering defined.</span>\n<span class=\"ansi-green-fg ansi-bold\">    139</span> \n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">    183</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">+---+--------+----------+</span>\n<span class=\"ansi-green-fg ansi-bold\">    184</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">    185</span> sc <span style=\"color:rgb(98,98,98)\">=</span> get_active_spark_context()\n<span class=\"ansi-green-fg\">--&gt; 186</span> jspec <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">cast</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">JVMView</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">sc</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jvm</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">org</span><span style=\"color:rgb(98,98,98)\">.</span>apache<span style=\"color:rgb(98,98,98)\">.</span>spark<span style=\"color:rgb(98,98,98)\">.</span>sql<span style=\"color:rgb(98,98,98)\">.</span>expressions<span style=\"color:rgb(98,98,98)\">.</span>Window<span style=\"color:rgb(98,98,98)\">.</span>orderBy(\n<span class=\"ansi-green-fg ansi-bold\">    187</span>     _to_java_cols(cols)\n<span class=\"ansi-green-fg ansi-bold\">    188</span> )\n<span class=\"ansi-green-fg ansi-bold\">    189</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> WindowSpec(jspec)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1712</span>, in <span class=\"ansi-cyan-fg\">JVMView.__getattr__</span><span class=\"ansi-blue-fg\">(self, name)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1709</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> name <span style=\"color:rgb(98,98,98)\">==</span> UserHelpAutoCompletion<span style=\"color:rgb(98,98,98)\">.</span>KEY:\n<span class=\"ansi-green-fg ansi-bold\">   1710</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> UserHelpAutoCompletion()\n<span class=\"ansi-green-fg\">-&gt; 1712</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1713</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFLECTION_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1714</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFL_GET_UNKNOWN_SUB_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_id</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1715</span> <span class=\"ansi-yellow-bg\">    </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">END_COMMAND_PART</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1716</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> answer <span style=\"color:rgb(98,98,98)\">==</span> proto<span style=\"color:rgb(98,98,98)\">.</span>SUCCESS_PACKAGE:\n<span class=\"ansi-green-fg ansi-bold\">   1717</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> JavaPackage(name, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_gateway_client, jvm_id<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_id)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#81e50b61 .cell execution_count=40}\n``` {.python .cell-code}\ncsr_data.head()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[40], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">csr_data</span><span style=\"color:rgb(98,98,98)\">.</span>head()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'csr_data' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#16827f9e .cell execution_count=41}\n``` {.python .cell-code}\nfeatures_names = df.select('feature_name', 'col_new').distinct()\nfeatures_names.where(col('feature_name') == 'n_actions_per_category_id#C#1204.0').head()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>                    Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[41], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> features_names <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">df</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">select</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">feature_name</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">col_new</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">'</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\">.</span>distinct()\n<span class=\"ansi-green-fg ansi-bold\">      2</span> features_names<span style=\"color:rgb(98,98,98)\">.</span>where(col(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">feature_name</span><span style=\"color:rgb(175,0,0)\">'</span>) <span style=\"color:rgb(98,98,98)\">==</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">n_actions_per_category_id#C#1204.0</span><span style=\"color:rgb(175,0,0)\">'</span>)<span style=\"color:rgb(98,98,98)\">.</span>head()\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:3229</span>, in <span class=\"ansi-cyan-fg\">DataFrame.select</span><span class=\"ansi-blue-fg\">(self, *cols)</span>\n<span class=\"ansi-green-fg ansi-bold\">   3184</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">select</span>(<span style=\"color:rgb(0,135,0)\">self</span>, <span style=\"color:rgb(98,98,98)\">*</span>cols: <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">ColumnOrName</span><span style=\"color:rgb(175,0,0)\">\"</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">DataFrame</span><span style=\"color:rgb(175,0,0)\">\"</span>:  <span style=\"font-style:italic;color:rgb(95,135,135)\"># type: ignore[misc]</span>\n<span class=\"ansi-green-fg ansi-bold\">   3185</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Projects a set of expressions and returns a new :class:`DataFrame`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   3186</span> \n<span class=\"ansi-green-fg ansi-bold\">   3187</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    .. versionadded:: 1.3.0</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   3227</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    +-----+---+</span>\n<span class=\"ansi-green-fg ansi-bold\">   3228</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 3229</span>     jdf <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_jdf<span style=\"color:rgb(98,98,98)\">.</span>select(<span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jcols</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-yellow-bg\">cols</span><span class=\"ansi-yellow-bg\">)</span>)\n<span class=\"ansi-green-fg ansi-bold\">   3230</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> DataFrame(jdf, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>sparkSession)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:2766</span>, in <span class=\"ansi-cyan-fg\">DataFrame._jcols</span><span class=\"ansi-blue-fg\">(self, *cols)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2764</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">len</span>(cols) <span style=\"color:rgb(98,98,98)\">==</span> <span style=\"color:rgb(98,98,98)\">1</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">and</span> <span style=\"color:rgb(0,135,0)\">isinstance</span>(cols[<span style=\"color:rgb(98,98,98)\">0</span>], <span style=\"color:rgb(0,135,0)\">list</span>):\n<span class=\"ansi-green-fg ansi-bold\">   2765</span>     cols <span style=\"color:rgb(98,98,98)\">=</span> cols[<span style=\"color:rgb(98,98,98)\">0</span>]\n<span class=\"ansi-green-fg\">-&gt; 2766</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jseq</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">cols</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">_to_java_column</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/dataframe.py:2753</span>, in <span class=\"ansi-cyan-fg\">DataFrame._jseq</span><span class=\"ansi-blue-fg\">(self, cols, converter)</span>\n<span class=\"ansi-green-fg ansi-bold\">   2747</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_jseq</span>(\n<span class=\"ansi-green-fg ansi-bold\">   2748</span>     <span style=\"color:rgb(0,135,0)\">self</span>,\n<span class=\"ansi-green-fg ansi-bold\">   2749</span>     cols: Sequence,\n<span class=\"ansi-green-fg ansi-bold\">   2750</span>     converter: Optional[Callable[<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(98,98,98)\">.</span>, Union[<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">PrimitiveType</span><span style=\"color:rgb(175,0,0)\">\"</span>, JavaObject]]] <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>,\n<span class=\"ansi-green-fg ansi-bold\">   2751</span> ) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> JavaObject:\n<span class=\"ansi-green-fg ansi-bold\">   2752</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Return a JVM Seq of Columns from a list of Column or names\"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 2753</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">_to_seq</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">sparkSession</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_sc</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">cols</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">converter</span><span class=\"ansi-yellow-bg\">)</span>\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/column.py:88</span>, in <span class=\"ansi-cyan-fg\">_to_seq</span><span class=\"ansi-blue-fg\">(sc, cols, converter)</span>\n<span class=\"ansi-green-fg ansi-bold\">     81</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     82</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">Convert a list of Columns (or names) into a JVM Seq of Column.</span>\n<span class=\"ansi-green-fg ansi-bold\">     83</span> \n<span class=\"ansi-green-fg ansi-bold\">     84</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">An optional `converter` could be used to convert items in `cols`</span>\n<span class=\"ansi-green-fg ansi-bold\">     85</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">into JVM Column objects.</span>\n<span class=\"ansi-green-fg ansi-bold\">     86</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"</span>\n<span class=\"ansi-green-fg ansi-bold\">     87</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> converter:\n<span class=\"ansi-green-fg\">---&gt; 88</span>     cols <span style=\"color:rgb(98,98,98)\">=</span> [<span class=\"ansi-yellow-bg\">converter</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">c</span><span class=\"ansi-yellow-bg\">)</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> c <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> cols]\n<span class=\"ansi-green-fg ansi-bold\">     89</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">assert</span> sc<span style=\"color:rgb(98,98,98)\">.</span>_jvm <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>\n<span class=\"ansi-green-fg ansi-bold\">     90</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> sc<span style=\"color:rgb(98,98,98)\">.</span>_jvm<span style=\"color:rgb(98,98,98)\">.</span>PythonUtils<span style=\"color:rgb(98,98,98)\">.</span>toSeq(cols)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/column.py:63</span>, in <span class=\"ansi-cyan-fg\">_to_java_column</span><span class=\"ansi-blue-fg\">(col)</span>\n<span class=\"ansi-green-fg ansi-bold\">     61</span>     jcol <span style=\"color:rgb(98,98,98)\">=</span> col<span style=\"color:rgb(98,98,98)\">.</span>_jc\n<span class=\"ansi-green-fg ansi-bold\">     62</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">elif</span> <span style=\"color:rgb(0,135,0)\">isinstance</span>(col, <span style=\"color:rgb(0,135,0)\">str</span>):\n<span class=\"ansi-green-fg\">---&gt; 63</span>     jcol <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">_create_column_from_name</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">col</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">     64</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg ansi-bold\">     65</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span> PySparkTypeError(\n<span class=\"ansi-green-fg ansi-bold\">     66</span>         error_class<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">NOT_COLUMN_OR_STR</span><span style=\"color:rgb(175,0,0)\">\"</span>,\n<span class=\"ansi-green-fg ansi-bold\">     67</span>         message_parameters<span style=\"color:rgb(98,98,98)\">=</span>{<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">arg_name</span><span style=\"color:rgb(175,0,0)\">\"</span>: <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">col</span><span style=\"color:rgb(175,0,0)\">\"</span>, <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">arg_type</span><span style=\"color:rgb(175,0,0)\">\"</span>: <span style=\"color:rgb(0,135,0)\">type</span>(col)<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span>},\n<span class=\"ansi-green-fg ansi-bold\">     68</span>     )\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/pyspark/sql/column.py:56</span>, in <span class=\"ansi-cyan-fg\">_create_column_from_name</span><span class=\"ansi-blue-fg\">(name)</span>\n<span class=\"ansi-green-fg ansi-bold\">     54</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_column_from_name</span>(name: <span style=\"color:rgb(0,135,0)\">str</span>) <span style=\"color:rgb(98,98,98)\">-</span><span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">Column</span><span style=\"color:rgb(175,0,0)\">\"</span>:\n<span class=\"ansi-green-fg ansi-bold\">     55</span>     sc <span style=\"color:rgb(98,98,98)\">=</span> get_active_spark_context()\n<span class=\"ansi-green-fg\">---&gt; 56</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> <span class=\"ansi-yellow-bg\">cast</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">JVMView</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">sc</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_jvm</span><span class=\"ansi-yellow-bg\">)</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">functions</span><span style=\"color:rgb(98,98,98)\">.</span>col(name)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1712</span>, in <span class=\"ansi-cyan-fg\">JVMView.__getattr__</span><span class=\"ansi-blue-fg\">(self, name)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1709</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> name <span style=\"color:rgb(98,98,98)\">==</span> UserHelpAutoCompletion<span style=\"color:rgb(98,98,98)\">.</span>KEY:\n<span class=\"ansi-green-fg ansi-bold\">   1710</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> UserHelpAutoCompletion()\n<span class=\"ansi-green-fg\">-&gt; 1712</span> answer <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_gateway_client</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">send_command</span><span class=\"ansi-yellow-bg\">(</span>\n<span class=\"ansi-green-fg ansi-bold\">   1713</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFLECTION_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1714</span> <span class=\"ansi-yellow-bg\">    </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">REFL_GET_UNKNOWN_SUB_COMMAND_NAME</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">name</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_id</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span>\n<span class=\"ansi-green-fg ansi-bold\">   1715</span> <span class=\"ansi-yellow-bg\">    </span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span style=\"font-weight:bold;color:rgb(175,95,0)\" class=\"ansi-yellow-bg\">\\n</span><span style=\"color:rgb(175,0,0)\" class=\"ansi-yellow-bg\">\"</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">+</span><span class=\"ansi-yellow-bg\"> </span><span class=\"ansi-yellow-bg\">proto</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">END_COMMAND_PART</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1716</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> answer <span style=\"color:rgb(98,98,98)\">==</span> proto<span style=\"color:rgb(98,98,98)\">.</span>SUCCESS_PACKAGE:\n<span class=\"ansi-green-fg ansi-bold\">   1717</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> JavaPackage(name, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_gateway_client, jvm_id<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_id)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/java_gateway.py:1036</span>, in <span class=\"ansi-cyan-fg\">GatewayClient.send_command</span><span class=\"ansi-blue-fg\">(self, command, retry, binary)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1015</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">send_command</span>(<span style=\"color:rgb(0,135,0)\">self</span>, command, retry<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, binary<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">False</span>):\n<span class=\"ansi-green-fg ansi-bold\">   1016</span> <span style=\"color:rgb(188,188,188)\">    </span><span style=\"font-style:italic;color:rgb(175,0,0)\">\"\"\"Sends a command to the JVM. This method is not intended to be</span>\n<span class=\"ansi-green-fg ansi-bold\">   1017</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       called directly by Py4J users. It is usually called by</span>\n<span class=\"ansi-green-fg ansi-bold\">   1018</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">       :class:`JavaMember` instances.</span>\n<span class=\"ansi-green-fg\">   (...)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1034</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">     if `binary` is `True`.</span>\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-style:italic;color:rgb(175,0,0)\">    \"\"\"</span>\n<span class=\"ansi-green-fg\">-&gt; 1036</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_get_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1037</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1038</span>         response <span style=\"color:rgb(98,98,98)\">=</span> connection<span style=\"color:rgb(98,98,98)\">.</span>send_command(command)\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:284</span>, in <span class=\"ansi-cyan-fg\">JavaClient._get_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    281</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">pass</span>\n<span class=\"ansi-green-fg ansi-bold\">    283</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> connection <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">or</span> connection<span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>:\n<span class=\"ansi-green-fg\">--&gt; 284</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">_create_new_connection</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    285</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:291</span>, in <span class=\"ansi-cyan-fg\">JavaClient._create_new_connection</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    287</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">def</span> <span style=\"color:rgb(0,0,255)\">_create_new_connection</span>(<span style=\"color:rgb(0,135,0)\">self</span>):\n<span class=\"ansi-green-fg ansi-bold\">    288</span>     connection <span style=\"color:rgb(98,98,98)\">=</span> ClientServerConnection(\n<span class=\"ansi-green-fg ansi-bold\">    289</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_parameters, <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>python_parameters,\n<span class=\"ansi-green-fg ansi-bold\">    290</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>gateway_property, <span style=\"color:rgb(0,135,0)\">self</span>)\n<span class=\"ansi-green-fg\">--&gt; 291</span>     <span class=\"ansi-yellow-bg\">connection</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect_to_java_server</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    292</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>set_thread_connection(connection)\n<span class=\"ansi-green-fg ansi-bold\">    293</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> connection\n\nFile <span class=\"ansi-green-fg\">~/sandbox/IFEBY310/.venv/lib/python3.12/site-packages/py4j/clientserver.py:438</span>, in <span class=\"ansi-cyan-fg\">ClientServerConnection.connect_to_java_server</span><span class=\"ansi-blue-fg\">(self)</span>\n<span class=\"ansi-green-fg ansi-bold\">    435</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context:\n<span class=\"ansi-green-fg ansi-bold\">    436</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>ssl_context<span style=\"color:rgb(98,98,98)\">.</span>wrap_socket(\n<span class=\"ansi-green-fg ansi-bold\">    437</span>         <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket, server_hostname<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>java_address)\n<span class=\"ansi-green-fg\">--&gt; 438</span> <span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">socket</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">connect</span><span class=\"ansi-yellow-bg\">(</span><span class=\"ansi-yellow-bg\">(</span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_address</span><span class=\"ansi-yellow-bg\">,</span><span class=\"ansi-yellow-bg\"> </span><span style=\"color:rgb(0,135,0)\" class=\"ansi-yellow-bg\">self</span><span style=\"color:rgb(98,98,98)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-yellow-bg\">java_port</span><span class=\"ansi-yellow-bg\">)</span><span class=\"ansi-yellow-bg\">)</span>\n<span class=\"ansi-green-fg ansi-bold\">    439</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stream <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>socket<span style=\"color:rgb(98,98,98)\">.</span>makefile(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">rb</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">    440</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>is_connected <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>\n\n<span class=\"ansi-red-fg\">ConnectionRefusedError</span>: [Errno 111] Connection refused</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#79e88d6b .cell execution_count=42}\n``` {.python .cell-code}\nfeatures_names.where(col('feature_name') == 'n_actions_per_category_id#O#1204.0').head()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[42], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">features_names</span><span style=\"color:rgb(98,98,98)\">.</span>where(col(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">feature_name</span><span style=\"color:rgb(175,0,0)\">'</span>) <span style=\"color:rgb(98,98,98)\">==</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">n_actions_per_category_id#O#1204.0</span><span style=\"color:rgb(175,0,0)\">'</span>)<span style=\"color:rgb(98,98,98)\">.</span>head()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'features_names' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c0dab5ad .cell execution_count=43}\n``` {.python .cell-code}\nfrom scipy.sparse import csr_matrix\nimport numpy as np\n\nrows = csr_data['row_new'].values - 1\ncols = csr_data['col_new'].values - 1\nvals = csr_data['value'].values\n\nX_csr = csr_matrix((vals, (rows, cols)))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[43], line 4</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">scipy</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">sparse</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> csr_matrix\n<span class=\"ansi-green-fg ansi-bold\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">numpy</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">np</span>\n<span class=\"ansi-green-fg\">----&gt; 4</span> rows <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">csr_data</span>[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">row_new</span><span style=\"color:rgb(175,0,0)\">'</span>]<span style=\"color:rgb(98,98,98)\">.</span>values <span style=\"color:rgb(98,98,98)\">-</span> <span style=\"color:rgb(98,98,98)\">1</span>\n<span class=\"ansi-green-fg ansi-bold\">      5</span> cols <span style=\"color:rgb(98,98,98)\">=</span> csr_data[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">col_new</span><span style=\"color:rgb(175,0,0)\">'</span>]<span style=\"color:rgb(98,98,98)\">.</span>values <span style=\"color:rgb(98,98,98)\">-</span> <span style=\"color:rgb(98,98,98)\">1</span>\n<span class=\"ansi-green-fg ansi-bold\">      6</span> vals <span style=\"color:rgb(98,98,98)\">=</span> csr_data[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">value</span><span style=\"color:rgb(175,0,0)\">'</span>]<span style=\"color:rgb(98,98,98)\">.</span>values\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'csr_data' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#1134213d .cell execution_count=44}\n``` {.python .cell-code}\nX_csr.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[44], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">X_csr</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X_csr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#9ff87b72 .cell execution_count=45}\n``` {.python .cell-code}\nX_csr.shape, X_csr.nnz\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[45], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">X_csr</span><span style=\"color:rgb(98,98,98)\">.</span>shape, X_csr<span style=\"color:rgb(98,98,98)\">.</span>nnz\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X_csr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#120c64a9 .cell execution_count=46}\n``` {.python .cell-code}\nX_csr.nnz / (152347 * 92)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[46], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">X_csr</span><span style=\"color:rgb(98,98,98)\">.</span>nnz <span style=\"color:rgb(98,98,98)\">/</span> (<span style=\"color:rgb(98,98,98)\">152347</span> <span style=\"color:rgb(98,98,98)\">*</span> <span style=\"color:rgb(98,98,98)\">92</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X_csr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f048f9d2 .cell execution_count=47}\n``` {.python .cell-code}\n# The label vector. Let's make it dense, flat and binary\ny = np.array(X_csr[:, 1].todense()).ravel()\ny = np.array(y > 0, dtype=np.int64)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[47], line 2</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># The label vector. Let's make it dense, flat and binary</span>\n<span class=\"ansi-green-fg\">----&gt; 2</span> y <span style=\"color:rgb(98,98,98)\">=</span> np<span style=\"color:rgb(98,98,98)\">.</span>array(<span class=\"ansi-yellow-bg\">X_csr</span>[:, <span style=\"color:rgb(98,98,98)\">1</span>]<span style=\"color:rgb(98,98,98)\">.</span>todense())<span style=\"color:rgb(98,98,98)\">.</span>ravel()\n<span class=\"ansi-green-fg ansi-bold\">      3</span> y <span style=\"color:rgb(98,98,98)\">=</span> np<span style=\"color:rgb(98,98,98)\">.</span>array(y <span style=\"color:rgb(98,98,98)\">&gt;</span> <span style=\"color:rgb(98,98,98)\">0</span>, dtype<span style=\"color:rgb(98,98,98)\">=</span>np<span style=\"color:rgb(98,98,98)\">.</span>int64)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X_csr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c552f8b1 .cell execution_count=48}\n``` {.python .cell-code}\nX_csr.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[48], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">X_csr</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X_csr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f9b1ca74 .cell execution_count=49}\n``` {.python .cell-code}\n# We remove the second and fourth column. \n# It actually contain the label we'll want to predict.\nkept_cols = list(range(92))\nkept_cols.pop(1)\nkept_cols.pop(2)\nX = X_csr[:, kept_cols]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[49], line 6</span>\n<span class=\"ansi-green-fg ansi-bold\">      4</span> kept_cols<span style=\"color:rgb(98,98,98)\">.</span>pop(<span style=\"color:rgb(98,98,98)\">1</span>)\n<span class=\"ansi-green-fg ansi-bold\">      5</span> kept_cols<span style=\"color:rgb(98,98,98)\">.</span>pop(<span style=\"color:rgb(98,98,98)\">2</span>)\n<span class=\"ansi-green-fg\">----&gt; 6</span> X <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">X_csr</span>[:, kept_cols]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X_csr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#d970b05f .cell execution_count=50}\n``` {.python .cell-code}\nX_csr.shape\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[50], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">X_csr</span><span style=\"color:rgb(98,98,98)\">.</span>shape\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X_csr' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Finally !!\n\nWow ! That was a lot of work. Now we have a features matrix $X$ and a vector of labels $y$.\n\n::: {#f730e768 .cell execution_count=51}\n``` {.python .cell-code}\nX.indices\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[51], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">X</span><span style=\"color:rgb(98,98,98)\">.</span>indices\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#edebf360 .cell execution_count=52}\n``` {.python .cell-code}\nX.indptr\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[52], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">X</span><span style=\"color:rgb(98,98,98)\">.</span>indptr\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#c5bcae8d .cell execution_count=53}\n``` {.python .cell-code}\nX.shape, X.nnz\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[53], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">X</span><span style=\"color:rgb(98,98,98)\">.</span>shape, X<span style=\"color:rgb(98,98,98)\">.</span>nnz\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#aa58f14e .cell execution_count=54}\n``` {.python .cell-code}\ny.shape, y.sum()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[54], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> <span class=\"ansi-yellow-bg\">y</span><span style=\"color:rgb(98,98,98)\">.</span>shape, y<span style=\"color:rgb(98,98,98)\">.</span>sum()\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'y' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n# Some learning for this data\n\n::: {#5c528a42 .cell execution_count=55}\n``` {.python .cell-code}\nfrom sklearn.preprocessing import MaxAbsScaler\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n\n# Normalize the features\nX = MaxAbsScaler().fit_transform(X)\nX_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.3)\n\nclf = LogisticRegression(\n    penalty='l2',\n    C=1e3,\n    solver='lbfgs',\n    class_weight='balanced'\n)\nclf.fit(X_train, y_train)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[55], line 6</span>\n<span class=\"ansi-green-fg ansi-bold\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">sklearn</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">linear_model</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> LogisticRegression\n<span class=\"ansi-green-fg ansi-bold\">      5</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Normalize the features</span>\n<span class=\"ansi-green-fg\">----&gt; 6</span> X <span style=\"color:rgb(98,98,98)\">=</span> MaxAbsScaler()<span style=\"color:rgb(98,98,98)\">.</span>fit_transform(<span class=\"ansi-yellow-bg\">X</span>)\n<span class=\"ansi-green-fg ansi-bold\">      7</span> X_train, X_test, y_train, y_test <span style=\"color:rgb(98,98,98)\">=</span> train_test_split(X, y, stratify<span style=\"color:rgb(98,98,98)\">=</span>y, test_size<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">0.3</span>)\n<span class=\"ansi-green-fg ansi-bold\">      9</span> clf <span style=\"color:rgb(98,98,98)\">=</span> LogisticRegression(\n<span class=\"ansi-green-fg ansi-bold\">     10</span>     penalty<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">l2</span><span style=\"color:rgb(175,0,0)\">'</span>,\n<span class=\"ansi-green-fg ansi-bold\">     11</span>     C<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">1e3</span>,\n<span class=\"ansi-green-fg ansi-bold\">     12</span>     solver<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">lbfgs</span><span style=\"color:rgb(175,0,0)\">'</span>,\n<span class=\"ansi-green-fg ansi-bold\">     13</span>     class_weight<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">balanced</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">     14</span> )\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'X' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#eb743122 .cell execution_count=56}\n``` {.python .cell-code}\nfeatures_names = features_names.toPandas()['feature_name']\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[56], line 1</span>\n<span class=\"ansi-green-fg\">----&gt; 1</span> features_names <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-yellow-bg\">features_names</span><span style=\"color:rgb(98,98,98)\">.</span>toPandas()[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">feature_name</span><span style=\"color:rgb(175,0,0)\">'</span>]\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'features_names' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#5265a758 .cell execution_count=57}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nplt.figure(figsize=(16, 5))\nplt.stem(clf.coef_[0], use_line_collection=True)\nplt.title('Logistic regression coefficients', fontsize=18)\n# We change the fontsize of minor ticks label\n_ = plt.xticks(np.arange(clf.coef_[0].shape[0]), features_names, \n           rotation='vertical', fontsize=8)\n_ = plt.yticks(fontsize=14)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[57], line 5</span>\n<span class=\"ansi-green-fg ansi-bold\">      2</span> get_ipython()<span style=\"color:rgb(98,98,98)\">.</span>run_line_magic(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">matplotlib</span><span style=\"color:rgb(175,0,0)\">'</span>, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">inline</span><span style=\"color:rgb(175,0,0)\">'</span>)\n<span class=\"ansi-green-fg ansi-bold\">      4</span> plt<span style=\"color:rgb(98,98,98)\">.</span>figure(figsize<span style=\"color:rgb(98,98,98)\">=</span>(<span style=\"color:rgb(98,98,98)\">16</span>, <span style=\"color:rgb(98,98,98)\">5</span>))\n<span class=\"ansi-green-fg\">----&gt; 5</span> plt<span style=\"color:rgb(98,98,98)\">.</span>stem(<span class=\"ansi-yellow-bg\">clf</span><span style=\"color:rgb(98,98,98)\">.</span>coef_[<span style=\"color:rgb(98,98,98)\">0</span>], use_line_collection<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n<span class=\"ansi-green-fg ansi-bold\">      6</span> plt<span style=\"color:rgb(98,98,98)\">.</span>title(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">Logistic regression coefficients</span><span style=\"color:rgb(175,0,0)\">'</span>, fontsize<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">18</span>)\n<span class=\"ansi-green-fg ansi-bold\">      7</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># We change the fontsize of minor ticks label</span>\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'clf' is not defined</pre>\n```\n:::\n\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 1536x480 with 0 Axes>\n```\n:::\n:::\n\n\n::: {#b2746404 .cell execution_count=58}\n``` {.python .cell-code}\nfrom sklearn.metrics import precision_recall_curve, f1_score\n\nprecision, recall, _ = precision_recall_curve(y_test, clf.predict_proba(X_test)[:, 1])\n    \nplt.figure(figsize=(8, 6))\nplt.plot(recall, precision, label='LR (F1=%.2f)' % f1_score(y_test, clf.predict(X_test)), lw=2)\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('Recall', fontsize=16)\nplt.ylabel('Precision', fontsize=16)\nplt.title('Precision/recall curve', fontsize=18)\nplt.legend(loc=\"upper right\", fontsize=14)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[58], line 3</span>\n<span class=\"ansi-green-fg ansi-bold\">      1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">sklearn</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">metrics</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> precision_recall_curve, f1_score\n<span class=\"ansi-green-fg\">----&gt; 3</span> precision, recall, _ <span style=\"color:rgb(98,98,98)\">=</span> precision_recall_curve(<span class=\"ansi-yellow-bg\">y_test</span>, clf<span style=\"color:rgb(98,98,98)\">.</span>predict_proba(X_test)[:, <span style=\"color:rgb(98,98,98)\">1</span>])\n<span class=\"ansi-green-fg ansi-bold\">      5</span> plt<span style=\"color:rgb(98,98,98)\">.</span>figure(figsize<span style=\"color:rgb(98,98,98)\">=</span>(<span style=\"color:rgb(98,98,98)\">8</span>, <span style=\"color:rgb(98,98,98)\">6</span>))\n<span class=\"ansi-green-fg ansi-bold\">      6</span> plt<span style=\"color:rgb(98,98,98)\">.</span>plot(recall, precision, label<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">LR (F1=</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">%.2f</span><span style=\"color:rgb(175,0,0)\">)</span><span style=\"color:rgb(175,0,0)\">'</span> <span style=\"color:rgb(98,98,98)\">%</span> f1_score(y_test, clf<span style=\"color:rgb(98,98,98)\">.</span>predict(X_test)), lw<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(98,98,98)\">2</span>)\n\n<span class=\"ansi-red-fg\">NameError</span>: name 'y_test' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "notebook11_dive_files"
    ],
    "filters": [],
    "includes": {}
  }
}