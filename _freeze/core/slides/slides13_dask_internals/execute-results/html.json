{
  "hash": "2c7956609ebe2156d9c0d35d4f3c8007",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Dask internals\"\nengine: jupyter\ndate: \"2025-01-17\"\n\nexecute: \n  eval: true\n  echo: true\n---\n\n\n\n\n# Backends {background-color=\"#1c191c\"}\n\n## Local backends \n\n::: {#setup .cell execution_count=2}\n``` {.python .cell-code}\nimport dask\n```\n:::\n\n\n## Single process backend\n\n## Multi-threaded backend\n\n::: {.callout-note}\n\n- Avoids serialization\n- Avoids interprocess communication costs \n\n:::\n\n::: {#cell-config-threads .cell execution_count=3}\n``` {.python .cell-code}\ndask.config.set(scheduler='threads')\n```\n\n::: {#config-threads .cell-output .cell-output-display execution_count=5}\n```\n<dask.config.set at 0x711a7c6cbb90>\n```\n:::\n:::\n\n\n## Multi-process backend\n\n::: {.callout-note}\n\n- Avoids Python's Global Interpreter Lock (GIL)\n\n:::\n\n::: {#cell-setup-multiprocessor .cell execution_count=4}\n``` {.python .cell-code}\ndic_config = {\n  \"multiprocessing.context\": \"forkserver\",\n  \"scheduler\": \"processes\"\n}\n\ndask.config.set(\n  **dic_config\n)\n```\n\n::: {#setup-multiprocessor .cell-output .cell-output-display execution_count=6}\n```\n<dask.config.set at 0x711a5cbbbc50>\n```\n:::\n:::\n\n\n::: {.aside}\n\nThe distributed scheduler can interact with the local cluster\n\n:::\n\n## Distributed backends\n\n::: {.callout-note}\n\n- Dask has one distributed scheduler backend \n- The distributed scheduler backend can interact with several clusters\n\n:::\n\n## Cluster examples\n\n- Kubernetes\n- Coiled\n- Yarn\n\n\n## Caveat : fault tolerance\n\n::: {.callout-warning}\n\nDask Client is not fault tolerant \n\n:::\n\n# Runtime Package Installation {background-color=\"#1c191c\"}\n\n## `PipInstall` worker plug-in\n\n::: {#a47274c5 .cell execution_count=5}\n``` {.python .cell-code}\nfrom dask import distributed\n\n( \n  distributed\n    .diagnostics\n    .plugin\n    .PipInstall([[\"bs4\"]])\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n<distributed.diagnostics.plugin.PipInstall at 0x711a243b4d10>\n```\n:::\n:::\n\n\n## Preinstalling libraries\n\n\n# Dask diagnostics {background-color=\"#1c191c\"}\n\n## UI \n\nWhen connecting to a cluster through a client, UI runs on scheduler node.\n\n`client.dashboard_link`\n\n\n# Serialization  {background-color=\"#1c191c\"}\n\n## Pickling in Python\n\n\n## Cloudpickle\n\n\n\n\n\n# {background-color=\"#1c191c\"}\n\n",
    "supporting": [
      "slides13_dask_internals_files"
    ],
    "filters": [],
    "includes": {}
  }
}